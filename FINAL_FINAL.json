[
    {
        "id": "a66943788f88412d",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8b315451366f54fb",
        "type": "ui_slider",
        "z": "a66943788f88412d",
        "name": "",
        "label": "Nivel de Luz",
        "tooltip": "",
        "group": "ab327fe76cd1459c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 250,
        "y": 3120,
        "wires": [
            [
                "54ddd9650e85b538",
                "24dbb20b3c5b91f6"
            ]
        ]
    },
    {
        "id": "66e6bd347daad1ba",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP3098241/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 280,
        "y": 640,
        "wires": [
            [
                "9d9eb234ba42ad29"
            ]
        ]
    },
    {
        "id": "9d9eb234ba42ad29",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 640,
        "wires": [
            [
                "8376065a44f4bc12",
                "fb1d1d43bda732b4",
                "8680d1f716d651c1",
                "95b1922dc5edbfd0",
                "7fdf587791f92b48",
                "270fbf7ef6022e10",
                "21528acc09c5d8b7",
                "7e8d394e12407759",
                "2b17405b3d709efa",
                "fc5235cb77d40cf9",
                "80a07629aa13318a",
                "29e14dd17c5964c4"
            ]
        ]
    },
    {
        "id": "8376065a44f4bc12",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "TEMPERATURA",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Temperatura",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 820,
        "wires": [
            [
                "8db81383a98bc1b5",
                "8d862231c39529ad"
            ]
        ]
    },
    {
        "id": "fb1d1d43bda732b4",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "HUMEDAD",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.hum",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Humedad",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 920,
        "wires": [
            [
                "5b590a7c0eed893b",
                "dc4c8cec1cefb791"
            ]
        ]
    },
    {
        "id": "8680d1f716d651c1",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "LED",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.LED",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "LED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1000,
        "wires": [
            [
                "6be75d31d22a70c8"
            ]
        ]
    },
    {
        "id": "bac5eb03159b32c2",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "formato hora",
        "func": "// cambiamos el payload que recibimos (timestamp) por la fecha/hora formateada en texto...\nvar fecha = new Date(msg.payload);\nmsg.payload = fecha.toLocaleString(\"es-ES\",{\"timeZone\":\"Europe/Madrid\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 640,
        "wires": [
            [
                "98f4b8ae93d68255"
            ]
        ]
    },
    {
        "id": "d82a8b303abd46da",
        "type": "ui_text_input",
        "z": "a66943788f88412d",
        "name": "envia",
        "label": "envia",
        "tooltip": "",
        "group": "8c10952216336c2b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 230,
        "y": 2600,
        "wires": [
            [
                "f4ddc9bbb41fa9f3"
            ]
        ]
    },
    {
        "id": "e45c31a73c25191e",
        "type": "ui_text_input",
        "z": "a66943788f88412d",
        "name": "actualiza",
        "label": "actualiza",
        "tooltip": "",
        "group": "8c10952216336c2b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 240,
        "y": 2640,
        "wires": [
            [
                "20bf13d89c58058c"
            ]
        ]
    },
    {
        "id": "a4c608ded5d70b86",
        "type": "ui_text_input",
        "z": "a66943788f88412d",
        "name": "velocidad",
        "label": "velocidad",
        "tooltip": "",
        "group": "8c10952216336c2b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 240,
        "y": 2680,
        "wires": [
            [
                "cab5e2f746e4e0cf"
            ]
        ]
    },
    {
        "id": "f1be332beb3e1ffa",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "CONFIG      Topic: IIX/ESPX/config",
        "info": "",
        "x": 250,
        "y": 2540,
        "wires": []
    },
    {
        "id": "d0c48c1f290e78b5",
        "type": "ui_switch",
        "z": "a66943788f88412d",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "8c10952216336c2b",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "2",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "1",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 230,
        "y": 2760,
        "wires": [
            [
                "9e0be3903f3ecce4"
            ]
        ]
    },
    {
        "id": "f255cd75318c07f5",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "ACTUADORES    Topic: IIX/ESPX/led/cmd",
        "info": "",
        "x": 280,
        "y": 3060,
        "wires": []
    },
    {
        "id": "c1e59f0eeb7f542b",
        "type": "ui_dropdown",
        "z": "a66943788f88412d",
        "name": "",
        "label": "SELECT ESP",
        "tooltip": "",
        "place": "seleccione un ESP",
        "group": "ab327fe76cd1459c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ESP1_cris",
                "value": "3098241",
                "type": "str"
            },
            {
                "label": "ESP2_hugo",
                "value": "9745759",
                "type": "str"
            },
            {
                "label": "ESP3_javi",
                "value": "10796726",
                "type": "str"
            },
            {
                "label": "ESP4_julian",
                "value": "1128666",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "id_ESP_led",
        "topicType": "flow",
        "className": "",
        "x": 260,
        "y": 3240,
        "wires": [
            [
                "5e4168e8fe123661"
            ]
        ]
    },
    {
        "id": "cddabbf672c73a13",
        "type": "ui_dropdown",
        "z": "a66943788f88412d",
        "name": "LED",
        "label": "LED",
        "tooltip": "",
        "place": "Select option",
        "group": "8c10952216336c2b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ENCENDIDO",
                "value": 2,
                "type": "num"
            },
            {
                "label": "APAGADO",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "LED",
        "x": 230,
        "y": 2720,
        "wires": [
            [
                "838892b593862e0f"
            ]
        ]
    },
    {
        "id": "54ddd9650e85b538",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "ab327fe76cd1459c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Nivel de Luz seleccionado:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 460,
        "y": 3160,
        "wires": []
    },
    {
        "id": "81870a79e5d10cc2",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 2740,
        "wires": []
    },
    {
        "id": "6cc83deb1278a9e4",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Payload JSON y TOPIC enviar",
        "func": "var envia=flow.get(\"envia\") || 0; //valor por defecto (5minutos)\nvar actualiza=flow.get(\"actualiza\") || 0;\nvar velocidad=flow.get(\"velocidad\") || 0;\nvar LED=flow.get(\"LED\") || 0;\nvar SWITCH=flow.get(\"SWITCH\") || 0;\n\nvar id_ESP=flow.get(\"id_ESP_config\");\n\nmsg.payload={\"envia\":envia, \"actualiza\":actualiza, \"velocidad\":velocidad,\"LED\":LED,\"SWITCH\":SWITCH};\n\nmsg.topic=\"II1/ESP\"+id_ESP+\"/config\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 2680,
        "wires": [
            [
                "5d86b3212718613b",
                "81870a79e5d10cc2"
            ]
        ]
    },
    {
        "id": "ca2e8457bf6cba84",
        "type": "ui_button",
        "z": "a66943788f88412d",
        "name": "",
        "group": "8c10952216336c2b",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Botón",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 670,
        "y": 2680,
        "wires": [
            [
                "6cc83deb1278a9e4"
            ]
        ]
    },
    {
        "id": "f4ddc9bbb41fa9f3",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "envia",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "20bf13d89c58058c",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "actualiza",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "cab5e2f746e4e0cf",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "velocidad",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "838892b593862e0f",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "LED",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "9e0be3903f3ecce4",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "SWITCH",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "490aa3d0ba76089c",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "0=null; 1=0(apagado); 2=1(encendido)",
        "info": "",
        "x": 650,
        "y": 2720,
        "wires": []
    },
    {
        "id": "a1faa4bdf68d1373",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "0=null; 1=0(apagado); 2=1(encendido)",
        "info": "",
        "x": 690,
        "y": 2760,
        "wires": []
    },
    {
        "id": "5d86b3212718613b",
        "type": "mqtt out",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "819581010d48bfd0",
        "x": 1150,
        "y": 2680,
        "wires": []
    },
    {
        "id": "b13c451a21fc7e06",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Payload JSON y TOPIC enviar",
        "func": "var NivelLED=flow.get(\"NivelLED\");\nvar idESP=flow.get(\"id_ESP_led\");\n\nmsg.payload={\"level\":NivelLED};\nmsg.topic=\"II1/ESP\"+idESP+\"/led/cmd\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 3180,
        "wires": [
            [
                "44a9e8df5beabf67",
                "59210e256dd2eb2a"
            ]
        ]
    },
    {
        "id": "95b1922dc5edbfd0",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 640,
        "wires": [
            [
                "bac5eb03159b32c2"
            ]
        ]
    },
    {
        "id": "237baaae7df76e00",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "ACTUALIZACION     Topic: IIX/ESPX/datos",
        "info": "",
        "x": 280,
        "y": 520,
        "wires": []
    },
    {
        "id": "98f4b8ae93d68255",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "FECHA DE ÚLTIMA ACTUALIZACIÓN (CRIS)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1200,
        "y": 640,
        "wires": []
    },
    {
        "id": "8db81383a98bc1b5",
        "type": "ui_gauge",
        "z": "a66943788f88412d",
        "name": "",
        "group": "cc1d7259111dc549",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "ºC",
        "format": "{{value}}",
        "min": "10",
        "max": "45",
        "colors": [
            "#ff0000",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "15",
        "seg2": "40",
        "className": "",
        "x": 930,
        "y": 860,
        "wires": []
    },
    {
        "id": "5b590a7c0eed893b",
        "type": "ui_gauge",
        "z": "a66943788f88412d",
        "name": "",
        "group": "cc1d7259111dc549",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humedad",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#ff0000",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "20",
        "seg2": "80",
        "className": "",
        "x": 920,
        "y": 960,
        "wires": []
    },
    {
        "id": "6be75d31d22a70c8",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Valor nivel led:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 860,
        "y": 1000,
        "wires": []
    },
    {
        "id": "96f43c300d55b6ca",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "CRIS: ESP3098241",
        "info": "{\n    \"group\":{\n        \"hide\":[]\n    }\n}",
        "x": 310,
        "y": 580,
        "wires": []
    },
    {
        "id": "fb89bc320956a89a",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "HUGO: ESP9745759",
        "info": "",
        "x": 320,
        "y": 1420,
        "wires": []
    },
    {
        "id": "840a7bdd55983e76",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "JAVI: ESP10796726",
        "info": "",
        "x": 1660,
        "y": 580,
        "wires": []
    },
    {
        "id": "d2ce56e3ab1bb4fa",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "JULIAN: ESP1128666",
        "info": "",
        "x": 1660,
        "y": 1440,
        "wires": []
    },
    {
        "id": "7fdf587791f92b48",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Uptime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Uptime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Uptime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 700,
        "wires": [
            [
                "b220efa24629f335"
            ]
        ]
    },
    {
        "id": "270fbf7ef6022e10",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Vcc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Vcc",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Vcc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 760,
        "wires": [
            [
                "1dd01b64453586b9"
            ]
        ]
    },
    {
        "id": "2a2031e1097930ec",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 700,
        "wires": []
    },
    {
        "id": "1dd01b64453586b9",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Vcc: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 760,
        "wires": []
    },
    {
        "id": "21528acc09c5d8b7",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "SWITCH",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.SWITCH",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SWITCH",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1060,
        "wires": [
            [
                "946611f97d30613e"
            ]
        ]
    },
    {
        "id": "946611f97d30613e",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Switch: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 840,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7134c1e07c04127a",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP9745759/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 280,
        "y": 1480,
        "wires": [
            [
                "c451ca4d31e599c0"
            ]
        ]
    },
    {
        "id": "c451ca4d31e599c0",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 1480,
        "wires": [
            [
                "c250300b4ce4b370",
                "3beff90a7fad0962",
                "01e08e9446e7c5c2",
                "cf1d203de9a128b2",
                "c86e96433e6fce51",
                "2b70aa4afaa9266c",
                "6d584c089ceed21a",
                "86a0ddd138833df3",
                "fe09e56bea1c8685",
                "8b23408d76bafa7e",
                "050102eb42f67bae",
                "e875e326763dd6af"
            ]
        ]
    },
    {
        "id": "cf1d203de9a128b2",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1360,
        "wires": []
    },
    {
        "id": "c250300b4ce4b370",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "TEMPERATURA",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Temperatura",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1660,
        "wires": [
            [
                "d477adab1018ead9",
                "9ae556f70c612077"
            ]
        ]
    },
    {
        "id": "3beff90a7fad0962",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "HUMEDAD",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.hum",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Humedad",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1760,
        "wires": [
            [
                "d3f843d2b77f8241",
                "3b1a4120b0df603f"
            ]
        ]
    },
    {
        "id": "01e08e9446e7c5c2",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "LED",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.LED",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "LED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1840,
        "wires": [
            [
                "928bf778bae5e982"
            ]
        ]
    },
    {
        "id": "928bf778bae5e982",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Valor nivel led:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 860,
        "y": 1840,
        "wires": []
    },
    {
        "id": "c86e96433e6fce51",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Uptime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Uptime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Uptime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1540,
        "wires": [
            [
                "1c63d8799ee06ca4"
            ]
        ]
    },
    {
        "id": "2b70aa4afaa9266c",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Vcc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Vcc",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Vcc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1600,
        "wires": [
            [
                "f17176da7c907692"
            ]
        ]
    },
    {
        "id": "3d6dc78e50bbdfee",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1020,
        "y": 1540,
        "wires": []
    },
    {
        "id": "f17176da7c907692",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Vcc: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 1600,
        "wires": []
    },
    {
        "id": "6d584c089ceed21a",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "SWITCH",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.SWITCH",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SWITCH",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1900,
        "wires": [
            [
                "8567a239688b3df9"
            ]
        ]
    },
    {
        "id": "8567a239688b3df9",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Switch: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 840,
        "y": 1900,
        "wires": []
    },
    {
        "id": "71c621bd13ad01ce",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP10796726/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1630,
        "y": 640,
        "wires": [
            [
                "f140fb75ccbb9751"
            ]
        ]
    },
    {
        "id": "f140fb75ccbb9751",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1830,
        "y": 640,
        "wires": [
            [
                "9e5302eff583e4a9",
                "e65da80d252e5801",
                "5e878b1a2aefef54",
                "eda7f979494ef4da",
                "51fe1c5e23b869bf",
                "285416891776755d",
                "7ad25911c1badad1",
                "e21d28f8d2b4203b",
                "5c17cb7a2f0549c5",
                "0b72319098a10d2c",
                "aab66d4315830d74",
                "eb0b27400c706ae3"
            ]
        ]
    },
    {
        "id": "eda7f979494ef4da",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 500,
        "wires": []
    },
    {
        "id": "9e5302eff583e4a9",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "TEMPERATURA",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Temperatura",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 800,
        "wires": [
            [
                "b3977f5e9453a328",
                "810e75c937a7bb24"
            ]
        ]
    },
    {
        "id": "e65da80d252e5801",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "HUMEDAD",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.hum",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Humedad",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 900,
        "wires": [
            [
                "19ec0275bbabbe52",
                "884e91fbac16f99b"
            ]
        ]
    },
    {
        "id": "5e878b1a2aefef54",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "LED",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.LED",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "LED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1000,
        "wires": [
            [
                "8c5091cb3d43d6cd"
            ]
        ]
    },
    {
        "id": "8c5091cb3d43d6cd",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Valor nivel led:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2200,
        "y": 1000,
        "wires": []
    },
    {
        "id": "51fe1c5e23b869bf",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Uptime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Uptime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Uptime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 680,
        "wires": [
            [
                "5de1f2f4bbc3d03c"
            ]
        ]
    },
    {
        "id": "285416891776755d",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Vcc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Vcc",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Vcc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 740,
        "wires": [
            [
                "f85243e585aa1b81"
            ]
        ]
    },
    {
        "id": "abb2da4591b5222b",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2420,
        "y": 680,
        "wires": []
    },
    {
        "id": "f85243e585aa1b81",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Vcc: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2210,
        "y": 740,
        "wires": []
    },
    {
        "id": "7ad25911c1badad1",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "SWITCH",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.SWITCH",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SWITCH",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 1060,
        "wires": [
            [
                "e73ff3a2278ea13f"
            ]
        ]
    },
    {
        "id": "e73ff3a2278ea13f",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Switch: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2180,
        "y": 1060,
        "wires": []
    },
    {
        "id": "f2738ce20fa7e853",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP1128666/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1620,
        "y": 1500,
        "wires": [
            [
                "92f9b76c09ea0cac"
            ]
        ]
    },
    {
        "id": "92f9b76c09ea0cac",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1830,
        "y": 1500,
        "wires": [
            [
                "488d9768b55cbf61",
                "e127627f144a397d",
                "c10e87fcc07fd009",
                "cee057ca5cd7a4e5",
                "c4340c34b73745f4",
                "2c99dacbb79ee08f",
                "10b44e4172726f09",
                "67ee059b9c67cb75",
                "42f21d5ac352b021",
                "1180c64e6b8638e3",
                "1070cdef30e7b76a",
                "a265254eadcce5df"
            ]
        ]
    },
    {
        "id": "cee057ca5cd7a4e5",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 1380,
        "wires": []
    },
    {
        "id": "488d9768b55cbf61",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "TEMPERATURA",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.temp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Temperatura",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 1680,
        "wires": [
            [
                "ed74a6cd13ed0387",
                "f62e9d95e6315937"
            ]
        ]
    },
    {
        "id": "e127627f144a397d",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "HUMEDAD",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.hum",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Humedad",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 1780,
        "wires": [
            [
                "c570f275c37d351c",
                "e2c791af177c3483"
            ]
        ]
    },
    {
        "id": "c10e87fcc07fd009",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "LED",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.LED",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "LED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1880,
        "wires": [
            [
                "92f469eb8493a0ad"
            ]
        ]
    },
    {
        "id": "92f469eb8493a0ad",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Valor nivel led:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2200,
        "y": 1880,
        "wires": []
    },
    {
        "id": "c4340c34b73745f4",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Uptime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Uptime",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Uptime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 1560,
        "wires": [
            [
                "9aa834428d720b6f"
            ]
        ]
    },
    {
        "id": "2c99dacbb79ee08f",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Vcc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Vcc",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Vcc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 1620,
        "wires": [
            [
                "e5a62721ad9c8c04"
            ]
        ]
    },
    {
        "id": "821149eb44bc298b",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Uptime: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2500,
        "y": 1560,
        "wires": []
    },
    {
        "id": "e5a62721ad9c8c04",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Vcc: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2210,
        "y": 1620,
        "wires": []
    },
    {
        "id": "10b44e4172726f09",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "SWITCH",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.SWITCH",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "SWITCH",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 1940,
        "wires": [
            [
                "d42c96ddd42c9b5a"
            ]
        ]
    },
    {
        "id": "d42c96ddd42c9b5a",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Switch: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2180,
        "y": 1940,
        "wires": []
    },
    {
        "id": "7e8d394e12407759",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "CHIPID (ESP)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.CHIPID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 580,
        "wires": [
            [
                "6efbdc976fcebb98"
            ]
        ]
    },
    {
        "id": "6efbdc976fcebb98",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Última actualización del ESP:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 580,
        "wires": []
    },
    {
        "id": "86a0ddd138833df3",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "CHIPID (ESP)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.CHIPID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1420,
        "wires": [
            [
                "a6f27c81dd0939c4"
            ]
        ]
    },
    {
        "id": "a6f27c81dd0939c4",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Última actualización del ESP:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 1420,
        "wires": []
    },
    {
        "id": "415f07db1ef4385a",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "formato hora",
        "func": "// cambiamos el payload que recibimos (timestamp) por la fecha/hora formateada en texto...\nvar fecha = new Date(msg.payload);\nmsg.payload = fecha.toLocaleString(\"es-ES\",{\"timeZone\":\"Europe/Madrid\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1480,
        "wires": [
            [
                "cfd471b7616cfcf1"
            ]
        ]
    },
    {
        "id": "fe09e56bea1c8685",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1480,
        "wires": [
            [
                "415f07db1ef4385a"
            ]
        ]
    },
    {
        "id": "cfd471b7616cfcf1",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "FECHA DE ÚLTIMA ACTUALIZACIÓN (HUGO)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 1200,
        "y": 1480,
        "wires": []
    },
    {
        "id": "67ee059b9c67cb75",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "CHIPID (ESP)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.CHIPID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 1440,
        "wires": [
            [
                "d7ab8af6d0f0d24a"
            ]
        ]
    },
    {
        "id": "d7ab8af6d0f0d24a",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Última actualización del ESP:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2310,
        "y": 1440,
        "wires": []
    },
    {
        "id": "3d7fae3589ae8d3e",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "formato hora",
        "func": "// cambiamos el payload que recibimos (timestamp) por la fecha/hora formateada en texto...\nvar fecha = new Date(msg.payload);\nmsg.payload = fecha.toLocaleString(\"es-ES\",{\"timeZone\":\"Europe/Madrid\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2250,
        "y": 1500,
        "wires": [
            [
                "de8cf0e099425609"
            ]
        ]
    },
    {
        "id": "42f21d5ac352b021",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 1500,
        "wires": [
            [
                "3d7fae3589ae8d3e"
            ]
        ]
    },
    {
        "id": "de8cf0e099425609",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "FECHA DE ÚLTIMA ACTUALIZACIÓN (JULIAN)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 2570,
        "y": 1500,
        "wires": []
    },
    {
        "id": "e21d28f8d2b4203b",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "CHIPID (ESP)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.CHIPID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 560,
        "wires": [
            [
                "e65c2eea14f60615"
            ]
        ]
    },
    {
        "id": "e65c2eea14f60615",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Última actualización del ESP:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 2310,
        "y": 560,
        "wires": []
    },
    {
        "id": "249e94b7fb26bd2d",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "formato hora",
        "func": "// cambiamos el payload que recibimos (timestamp) por la fecha/hora formateada en texto...\nvar fecha = new Date(msg.payload);\nmsg.payload = fecha.toLocaleString(\"es-ES\",{\"timeZone\":\"Europe/Madrid\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2250,
        "y": 620,
        "wires": [
            [
                "7fcfc20608cf753c"
            ]
        ]
    },
    {
        "id": "5c17cb7a2f0549c5",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 620,
        "wires": [
            [
                "249e94b7fb26bd2d"
            ]
        ]
    },
    {
        "id": "7fcfc20608cf753c",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "FECHA DE ÚLTIMA ACTUALIZACIÓN (JAVI)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 2530,
        "y": 620,
        "wires": []
    },
    {
        "id": "fa1b27e1ab561a11",
        "type": "ui_dropdown",
        "z": "a66943788f88412d",
        "name": "idESP",
        "label": "SELECT ESP",
        "tooltip": "",
        "place": "seleccione un ESP",
        "group": "8c10952216336c2b",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ESP1_cris",
                "value": 3098241,
                "type": "num"
            },
            {
                "label": "ESP2_hugo",
                "value": 9745759,
                "type": "num"
            },
            {
                "label": "ESP3_javi",
                "value": 10796726,
                "type": "num"
            },
            {
                "label": "ESP4_julian",
                "value": 1128666,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 230,
        "y": 2800,
        "wires": [
            [
                "aaa8396563ade65a"
            ]
        ]
    },
    {
        "id": "2964a2a78ad370af",
        "type": "ui_button",
        "z": "a66943788f88412d",
        "name": "",
        "group": "ab327fe76cd1459c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Botón",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 670,
        "y": 3180,
        "wires": [
            [
                "b13c451a21fc7e06"
            ]
        ]
    },
    {
        "id": "786951076873b0ed",
        "type": "ui_text_input",
        "z": "a66943788f88412d",
        "name": "",
        "label": "MAX temperatura",
        "tooltip": "",
        "group": "6cc380b90f958cb0",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "max_temp",
        "sendOnBlur": true,
        "topicType": "flow",
        "x": 330,
        "y": 2860,
        "wires": [
            [
                "0f272c9bce679eac"
            ]
        ]
    },
    {
        "id": "80b3282cba375120",
        "type": "ui_text_input",
        "z": "a66943788f88412d",
        "name": "",
        "label": "MIN temperatura",
        "tooltip": "",
        "group": "6cc380b90f958cb0",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "min_temp",
        "sendOnBlur": true,
        "topicType": "flow",
        "x": 330,
        "y": 2900,
        "wires": [
            [
                "826513a5b1c3de3a"
            ]
        ]
    },
    {
        "id": "bc6524a7bf21e658",
        "type": "ui_text_input",
        "z": "a66943788f88412d",
        "name": "",
        "label": "MAX humedad (%)",
        "tooltip": "",
        "group": "6cc380b90f958cb0",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "max_hum",
        "sendOnBlur": true,
        "topicType": "flow",
        "x": 330,
        "y": 2940,
        "wires": [
            [
                "68e34545c5a93f56"
            ]
        ]
    },
    {
        "id": "0fe5b46406a99f58",
        "type": "ui_text_input",
        "z": "a66943788f88412d",
        "name": "",
        "label": "MIN humedad (%)",
        "tooltip": "",
        "group": "6cc380b90f958cb0",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "min_hum",
        "sendOnBlur": true,
        "topicType": "flow",
        "x": 330,
        "y": 2980,
        "wires": [
            [
                "cd0e84f68bcbe7b6"
            ]
        ]
    },
    {
        "id": "bb8d758de9c2954d",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "ULTIMAS VOLUNTADES    Topic: IIX/ESPX/conexion",
        "info": "",
        "x": 310,
        "y": 80,
        "wires": []
    },
    {
        "id": "f7f8b44772efa645",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP3098241/conexion",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "4b771af678c827c2"
            ]
        ]
    },
    {
        "id": "53fec0f517478a7b",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP9745759/conexion",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 290,
        "y": 220,
        "wires": [
            [
                "4b7e56132150cc92"
            ]
        ]
    },
    {
        "id": "7752e005d19ab720",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP10796726/conexion",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 290,
        "y": 280,
        "wires": [
            [
                "091fdf43a0ca420e"
            ]
        ]
    },
    {
        "id": "75225f8bcbff1c11",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP1128666/conexion",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "b3429e1c0a2ea419"
            ]
        ]
    },
    {
        "id": "b74ad1b796ef816d",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "var online=msg.payload.online;\n\nif (!online)\n{\n    msg.payload=\"La placa: ESP_3098241 se ha desconectado.\";\n    msg.topic=\"ALERTA\";\n    \n    return msg;\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 160,
        "wires": [
            [
                "276e22c01f7e3eb6"
            ]
        ]
    },
    {
        "id": "276e22c01f7e3eb6",
        "type": "ui_toast",
        "z": "a66943788f88412d",
        "position": "bottom left",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "d477adab1018ead9",
        "type": "ui_gauge",
        "z": "a66943788f88412d",
        "name": "",
        "group": "8bc36ba409dbee33",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "ºC",
        "format": "{{value}}",
        "min": "10",
        "max": "45",
        "colors": [
            "#ff0000",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "15",
        "seg2": "40",
        "className": "",
        "x": 910,
        "y": 1700,
        "wires": []
    },
    {
        "id": "d3f843d2b77f8241",
        "type": "ui_gauge",
        "z": "a66943788f88412d",
        "name": "",
        "group": "8bc36ba409dbee33",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humedad",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#ff0000",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "20",
        "seg2": "80",
        "className": "",
        "x": 900,
        "y": 1800,
        "wires": []
    },
    {
        "id": "ed74a6cd13ed0387",
        "type": "ui_gauge",
        "z": "a66943788f88412d",
        "name": "",
        "group": "929645bed50e4a53",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "ºC",
        "format": "{{value}}",
        "min": "10",
        "max": "45",
        "colors": [
            "#ff0000",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "15",
        "seg2": "40",
        "className": "",
        "x": 2270,
        "y": 1700,
        "wires": []
    },
    {
        "id": "c570f275c37d351c",
        "type": "ui_gauge",
        "z": "a66943788f88412d",
        "name": "",
        "group": "929645bed50e4a53",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humedad",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#ff0000",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "20",
        "seg2": "80",
        "className": "",
        "x": 2260,
        "y": 1820,
        "wires": []
    },
    {
        "id": "b3977f5e9453a328",
        "type": "ui_gauge",
        "z": "a66943788f88412d",
        "name": "",
        "group": "84b881e0c7be9760",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatura",
        "label": "ºC",
        "format": "{{value}}",
        "min": "10",
        "max": "45",
        "colors": [
            "#ff0000",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "15",
        "seg2": "40",
        "className": "",
        "x": 2250,
        "y": 840,
        "wires": []
    },
    {
        "id": "19ec0275bbabbe52",
        "type": "ui_gauge",
        "z": "a66943788f88412d",
        "name": "",
        "group": "84b881e0c7be9760",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humedad",
        "label": "%",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#ff0000",
            "#00ff00",
            "#ff0000"
        ],
        "seg1": "20",
        "seg2": "80",
        "className": "",
        "x": 2240,
        "y": 940,
        "wires": []
    },
    {
        "id": "4b771af678c827c2",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 160,
        "wires": [
            [
                "b74ad1b796ef816d",
                "2f4fcac1eb191026"
            ]
        ]
    },
    {
        "id": "9a39fc5ca9bcc809",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "var online=msg.payload.online;\n\nif (!online)\n{\n    msg.payload=\"La placa: ESP_9745759 se ha desconectado.\";\n    msg.topic=\"ALERTA\";\n    \n    return msg;\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 220,
        "wires": [
            [
                "276e22c01f7e3eb6"
            ]
        ]
    },
    {
        "id": "4b7e56132150cc92",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 220,
        "wires": [
            [
                "9a39fc5ca9bcc809",
                "2f4fcac1eb191026"
            ]
        ]
    },
    {
        "id": "2d56a95bbb1bbaa1",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "var online=msg.payload.online;\n\nif (!online)\n{\n    msg.payload=\"La placa: ESP_10796726 se ha desconectado.\";\n    msg.topic=\"ALERTA\";\n    \n    return msg;\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 280,
        "wires": [
            [
                "276e22c01f7e3eb6"
            ]
        ]
    },
    {
        "id": "091fdf43a0ca420e",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 280,
        "wires": [
            [
                "2d56a95bbb1bbaa1",
                "2f4fcac1eb191026"
            ]
        ]
    },
    {
        "id": "b26688748e056e60",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "var online=msg.payload.online;\n\nif (!online)\n{\n    msg.payload=\"La placa: ESP_1128666 se ha desconectado.\";\n    msg.topic=\"ALERTA\";\n    \n    return msg;\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 340,
        "wires": [
            [
                "276e22c01f7e3eb6"
            ]
        ]
    },
    {
        "id": "b3429e1c0a2ea419",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 340,
        "wires": [
            [
                "b26688748e056e60",
                "2f4fcac1eb191026"
            ]
        ]
    },
    {
        "id": "2b17405b3d709efa",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 520,
        "wires": []
    },
    {
        "id": "2f4fcac1eb191026",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 420,
        "wires": []
    },
    {
        "id": "59210e256dd2eb2a",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 3240,
        "wires": []
    },
    {
        "id": "aaa8396563ade65a",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id_ESP_config",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 2800,
        "wires": [
            []
        ]
    },
    {
        "id": "24dbb20b3c5b91f6",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "NivelLED",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "5e4168e8fe123661",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id_ESP_led",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "0f272c9bce679eac",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "max_temp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "826513a5b1c3de3a",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "min_temp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "68e34545c5a93f56",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "max_hum",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2940,
        "wires": [
            []
        ]
    },
    {
        "id": "cd0e84f68bcbe7b6",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "min_hum",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2980,
        "wires": [
            []
        ]
    },
    {
        "id": "44a9e8df5beabf67",
        "type": "mqtt out",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "819581010d48bfd0",
        "x": 1150,
        "y": 3180,
        "wires": []
    },
    {
        "id": "2e88f91c3dc26007",
        "type": "ui_toast",
        "z": "a66943788f88412d",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1230,
        "y": 820,
        "wires": []
    },
    {
        "id": "8d862231c39529ad",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "MAX, MIN TEMPERATURA",
        "func": "const id_ESP=3098241;\n\nvar temp=msg.payload;\n\n//notificaciones:\nvar max_temp=flow.get(\"max_temp\")||40;\nvar min_temp=flow.get(\"min_temp\")||10;\n\n\nif (temp>=max_temp)\n{\n    msg.payload=\"TEMPERATURA MÁXIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\nelse if (temp<=min_temp)\n{\n    msg.payload=\"TEMPERATURA MÍNIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 820,
        "wires": [
            [
                "2e88f91c3dc26007"
            ]
        ]
    },
    {
        "id": "dc4c8cec1cefb791",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "MAX, MIN HUMEDAD",
        "func": "const id_ESP=3098241;\n\nvar hum=msg.payload;\n\n//notificaciones\nvar max_hum=flow.get(\"max_hum\")||80;\nvar min_hum=flow.get(\"min_hum\")||20;\n\nif (hum>=max_hum)\n{\n    msg.payload=\"HUMEDAD MÁXIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\nelse if (hum<=min_hum)\n{\n    msg.payload=\"HUMEDAD MÍNIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 920,
        "wires": [
            [
                "8067fc7f9d5121c9"
            ]
        ]
    },
    {
        "id": "8067fc7f9d5121c9",
        "type": "ui_toast",
        "z": "a66943788f88412d",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1250,
        "y": 920,
        "wires": []
    },
    {
        "id": "0c645d59df992a02",
        "type": "ui_toast",
        "z": "a66943788f88412d",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1230,
        "y": 1660,
        "wires": []
    },
    {
        "id": "1d67f8e53b951293",
        "type": "ui_toast",
        "z": "a66943788f88412d",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2610,
        "y": 1660,
        "wires": []
    },
    {
        "id": "1df5bc507c3bfade",
        "type": "ui_toast",
        "z": "a66943788f88412d",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2530,
        "y": 800,
        "wires": []
    },
    {
        "id": "28a9890caf339cda",
        "type": "ui_toast",
        "z": "a66943788f88412d",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1210,
        "y": 1760,
        "wires": []
    },
    {
        "id": "da341c4f5e6f7737",
        "type": "ui_toast",
        "z": "a66943788f88412d",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2550,
        "y": 900,
        "wires": []
    },
    {
        "id": "816e890971f47613",
        "type": "ui_toast",
        "z": "a66943788f88412d",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2530,
        "y": 1780,
        "wires": []
    },
    {
        "id": "5546b9bab94ea732",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Topic: IIX/ESPX/led/status",
        "info": "",
        "x": 230,
        "y": 2220,
        "wires": []
    },
    {
        "id": "9927894101e231d6",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP3098241/led/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 2280,
        "wires": [
            [
                "d759639319899ed2"
            ]
        ]
    },
    {
        "id": "9ba09f0e0be447f8",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP9745759/led/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 2340,
        "wires": [
            [
                "7598501c155057e5"
            ]
        ]
    },
    {
        "id": "3333a77f11765586",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP10796726/led/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 2400,
        "wires": [
            [
                "35665a27388e0167"
            ]
        ]
    },
    {
        "id": "619b6f5a3d4660df",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP1128666/led/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 300,
        "y": 2460,
        "wires": [
            [
                "392014e3be926b23"
            ]
        ]
    },
    {
        "id": "d95d654d7d22a8a4",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 2200,
        "wires": []
    },
    {
        "id": "d759639319899ed2",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 2280,
        "wires": [
            [
                "d95d654d7d22a8a4",
                "f4154ccc0d45b751"
            ]
        ]
    },
    {
        "id": "f4154ccc0d45b751",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.origen",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 2280,
        "wires": [
            [
                "5512430b7e872133"
            ]
        ]
    },
    {
        "id": "5512430b7e872133",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ORIGEN NivelLED: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 950,
        "y": 2280,
        "wires": []
    },
    {
        "id": "7598501c155057e5",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 2340,
        "wires": [
            [
                "6395f4f312a2141e"
            ]
        ]
    },
    {
        "id": "6395f4f312a2141e",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.origen",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 2340,
        "wires": [
            [
                "221af8b5effbb32a"
            ]
        ]
    },
    {
        "id": "221af8b5effbb32a",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ORIGEN NivelLED: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 950,
        "y": 2340,
        "wires": []
    },
    {
        "id": "35665a27388e0167",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 2400,
        "wires": [
            [
                "f9ace5b71dfceb96"
            ]
        ]
    },
    {
        "id": "f9ace5b71dfceb96",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.origen",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 2400,
        "wires": [
            [
                "7f8a3c977007897b"
            ]
        ]
    },
    {
        "id": "7f8a3c977007897b",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ORIGEN NivelLED: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 950,
        "y": 2400,
        "wires": []
    },
    {
        "id": "392014e3be926b23",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 2460,
        "wires": [
            [
                "ca36d9af7f856619"
            ]
        ]
    },
    {
        "id": "ca36d9af7f856619",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.origen",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 2460,
        "wires": [
            [
                "048363f6f2fa8e01"
            ]
        ]
    },
    {
        "id": "048363f6f2fa8e01",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ORIGEN NivelLED: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 950,
        "y": 2460,
        "wires": []
    },
    {
        "id": "7c8c11ccf86a0d01",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "ACTUADORES    Topic: IIX/ESPX/switch/cmd",
        "info": "",
        "x": 290,
        "y": 3320,
        "wires": []
    },
    {
        "id": "bbcb1eaf60b038c9",
        "type": "ui_switch",
        "z": "a66943788f88412d",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "fe6409ad6ad243f8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 230,
        "y": 3380,
        "wires": [
            [
                "bf2848f6e5b48398",
                "dfb649e174d06906"
            ]
        ]
    },
    {
        "id": "bf2848f6e5b48398",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "fe6409ad6ad243f8",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Switch en modo seleccionado:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 450,
        "y": 3420,
        "wires": []
    },
    {
        "id": "e40daec641a25c3f",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Payload JSON y TOPIC enviar",
        "func": "var switch_=flow.get(\"switch_\");\nvar idESP=flow.get(\"id_ESP_switch\");\n\nmsg.payload={\"level\":switch_};\n\nmsg.topic=\"II1/ESP\"+idESP+\"/switch/cmd\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 3440,
        "wires": [
            [
                "0b23e6e8735feff4",
                "0bd6800fb1b9d804"
            ]
        ]
    },
    {
        "id": "957ce58815e5f32e",
        "type": "ui_dropdown",
        "z": "a66943788f88412d",
        "name": "",
        "label": "SELECT ESP",
        "tooltip": "",
        "place": "seleccione un ESP",
        "group": "fe6409ad6ad243f8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ESP1_cris",
                "value": "3098241",
                "type": "str"
            },
            {
                "label": "ESP2_hugo",
                "value": "9745759",
                "type": "str"
            },
            {
                "label": "ESP3_javi",
                "value": "10796726",
                "type": "str"
            },
            {
                "label": "ESP4_julian",
                "value": "1128666",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "id_ESP_switch",
        "topicType": "flow",
        "className": "",
        "x": 260,
        "y": 3500,
        "wires": [
            [
                "86a3eb3de4c879ec"
            ]
        ]
    },
    {
        "id": "9a4b429e85e1e6a4",
        "type": "ui_button",
        "z": "a66943788f88412d",
        "name": "",
        "group": "fe6409ad6ad243f8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Botón",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 660,
        "y": 3440,
        "wires": [
            [
                "e40daec641a25c3f"
            ]
        ]
    },
    {
        "id": "86a3eb3de4c879ec",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id_ESP_switch",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 3500,
        "wires": [
            []
        ]
    },
    {
        "id": "dfb649e174d06906",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "switch_",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "0b23e6e8735feff4",
        "type": "mqtt out",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "819581010d48bfd0",
        "x": 1150,
        "y": 3440,
        "wires": []
    },
    {
        "id": "4b41f422b77b03a8",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Topic: IIX/ESPX/switch/status",
        "info": "",
        "x": 1580,
        "y": 2220,
        "wires": []
    },
    {
        "id": "a83d8502f09fbff4",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP3098241/switch/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1650,
        "y": 2280,
        "wires": [
            [
                "703ee32daafe068f"
            ]
        ]
    },
    {
        "id": "fde2feffeda5a996",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP9745759/switch/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1650,
        "y": 2340,
        "wires": [
            [
                "f09fce591693a46a"
            ]
        ]
    },
    {
        "id": "c4fc4e845519d7c2",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP10796726/switch/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1650,
        "y": 2400,
        "wires": [
            [
                "4ac0e53fdf39b2fd"
            ]
        ]
    },
    {
        "id": "6ad2ef18559dacd0",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP1128666/switch/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "819581010d48bfd0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 1650,
        "y": 2460,
        "wires": [
            [
                "cb106fc3c5f7c56e"
            ]
        ]
    },
    {
        "id": "703ee32daafe068f",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1870,
        "y": 2280,
        "wires": [
            [
                "378d40ccd083ce2f"
            ]
        ]
    },
    {
        "id": "378d40ccd083ce2f",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.origen",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2070,
        "y": 2280,
        "wires": [
            [
                "19868043966c6f81"
            ]
        ]
    },
    {
        "id": "19868043966c6f81",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ORIGEN SWITCH: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2290,
        "y": 2280,
        "wires": []
    },
    {
        "id": "f09fce591693a46a",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1870,
        "y": 2340,
        "wires": [
            [
                "e509980039664b4e"
            ]
        ]
    },
    {
        "id": "e509980039664b4e",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.origen",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2070,
        "y": 2340,
        "wires": [
            [
                "70851fe893a8c976"
            ]
        ]
    },
    {
        "id": "70851fe893a8c976",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ORIGEN SWITCH: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2290,
        "y": 2340,
        "wires": []
    },
    {
        "id": "4ac0e53fdf39b2fd",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1870,
        "y": 2400,
        "wires": [
            [
                "76da0650c88367f7"
            ]
        ]
    },
    {
        "id": "76da0650c88367f7",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.origen",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2070,
        "y": 2400,
        "wires": [
            [
                "ab75dbf9a6bc5f1a"
            ]
        ]
    },
    {
        "id": "ab75dbf9a6bc5f1a",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ORIGEN SWITCH: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2290,
        "y": 2400,
        "wires": []
    },
    {
        "id": "cb106fc3c5f7c56e",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1870,
        "y": 2460,
        "wires": [
            [
                "13695c3f8f1928e5"
            ]
        ]
    },
    {
        "id": "13695c3f8f1928e5",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.origen",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2070,
        "y": 2460,
        "wires": [
            [
                "3dd7124ce6f993d8"
            ]
        ]
    },
    {
        "id": "3dd7124ce6f993d8",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ORIGEN SWITCH: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 2290,
        "y": 2460,
        "wires": []
    },
    {
        "id": "0bd6800fb1b9d804",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 3520,
        "wires": []
    },
    {
        "id": "fc5235cb77d40cf9",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_SSId",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.SSId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1120,
        "wires": [
            [
                "c0401aa947ce33d0"
            ]
        ]
    },
    {
        "id": "80a07629aa13318a",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_IP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.IP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 1160,
        "wires": [
            [
                "72e49457639ef717"
            ]
        ]
    },
    {
        "id": "29e14dd17c5964c4",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_RSSI",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.RSSI",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1200,
        "wires": [
            [
                "cb9e5daf1a6c0a6d"
            ]
        ]
    },
    {
        "id": "c0401aa947ce33d0",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI SSId: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 930,
        "y": 1120,
        "wires": []
    },
    {
        "id": "72e49457639ef717",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI IP: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 920,
        "y": 1160,
        "wires": []
    },
    {
        "id": "cb9e5daf1a6c0a6d",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "cc1d7259111dc549",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI RSSI: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 930,
        "y": 1200,
        "wires": []
    },
    {
        "id": "8b23408d76bafa7e",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_SSId",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.SSId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1960,
        "wires": [
            [
                "fad941e71a3c3be7"
            ]
        ]
    },
    {
        "id": "050102eb42f67bae",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_IP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.IP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 2000,
        "wires": [
            [
                "4c055462ea69bfdf"
            ]
        ]
    },
    {
        "id": "e875e326763dd6af",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_RSSI",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.RSSI",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 2040,
        "wires": [
            [
                "85fe171d90757e06"
            ]
        ]
    },
    {
        "id": "fad941e71a3c3be7",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI SSId: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 930,
        "y": 1960,
        "wires": []
    },
    {
        "id": "4c055462ea69bfdf",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI IP: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 920,
        "y": 2000,
        "wires": []
    },
    {
        "id": "85fe171d90757e06",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "8bc36ba409dbee33",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI RSSI: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 930,
        "y": 2040,
        "wires": []
    },
    {
        "id": "0b72319098a10d2c",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_SSId",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.SSId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 1120,
        "wires": [
            [
                "b69a843401804a8f"
            ]
        ]
    },
    {
        "id": "aab66d4315830d74",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_IP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.IP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 1160,
        "wires": [
            [
                "76d202b57c07dbad"
            ]
        ]
    },
    {
        "id": "eb0b27400c706ae3",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_RSSI",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.RSSI",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 1200,
        "wires": [
            [
                "13ffa0e28ffb3046"
            ]
        ]
    },
    {
        "id": "b69a843401804a8f",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI SSId: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 2270,
        "y": 1120,
        "wires": []
    },
    {
        "id": "76d202b57c07dbad",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI IP: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 2260,
        "y": 1160,
        "wires": []
    },
    {
        "id": "13ffa0e28ffb3046",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "84b881e0c7be9760",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI RSSI: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 2270,
        "y": 1200,
        "wires": []
    },
    {
        "id": "1180c64e6b8638e3",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_SSId",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.SSId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 2000,
        "wires": [
            [
                "16bba268d2198e98"
            ]
        ]
    },
    {
        "id": "1070cdef30e7b76a",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_IP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.IP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 2040,
        "wires": [
            [
                "f7b9165242385447"
            ]
        ]
    },
    {
        "id": "a265254eadcce5df",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "WIFI_RSSI",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.RSSI",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 2080,
        "wires": [
            [
                "72090de913332cd2"
            ]
        ]
    },
    {
        "id": "16bba268d2198e98",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI SSId: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 2270,
        "y": 2000,
        "wires": []
    },
    {
        "id": "f7b9165242385447",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI IP: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 2260,
        "y": 2040,
        "wires": []
    },
    {
        "id": "72090de913332cd2",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "929645bed50e4a53",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "WIFI RSSI: ",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 2270,
        "y": 2080,
        "wires": []
    },
    {
        "id": "b2a7e53261a2c606",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 3190,
        "y": 220,
        "wires": [
            [
                "e66b994d83bfbd85",
                "54e0912a443df097"
            ]
        ]
    },
    {
        "id": "e66b994d83bfbd85",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "añade fecha",
        "func": "msg.payload.date=new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3390,
        "y": 220,
        "wires": [
            [
                "4e32b3be46a6bcc2"
            ]
        ]
    },
    {
        "id": "4e32b3be46a6bcc2",
        "type": "mongodb out",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 3660,
        "y": 220,
        "wires": []
    },
    {
        "id": "84cbbd1e2d97d5ed",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP3098241/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2960,
        "y": 220,
        "wires": [
            [
                "b2a7e53261a2c606"
            ]
        ]
    },
    {
        "id": "f437fcfc4b979ab8",
        "type": "mongodb out",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Actuadores",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 4620,
        "y": 220,
        "wires": []
    },
    {
        "id": "2c0f1a68c62a60b0",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP9745759/led/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 3970,
        "y": 220,
        "wires": [
            [
                "7c565f54f9fe230f"
            ]
        ]
    },
    {
        "id": "7c565f54f9fe230f",
        "type": "json",
        "z": "a66943788f88412d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4210,
        "y": 220,
        "wires": [
            [
                "9ef8df164cb981bd"
            ]
        ]
    },
    {
        "id": "9ef8df164cb981bd",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "añade fecha",
        "func": "msg.payload.date=new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4350,
        "y": 220,
        "wires": [
            [
                "f437fcfc4b979ab8"
            ]
        ]
    },
    {
        "id": "e92a712eb3ac0e49",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP9745759/switch/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 3980,
        "y": 280,
        "wires": [
            [
                "7c565f54f9fe230f"
            ]
        ]
    },
    {
        "id": "54e0912a443df097",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3350,
        "y": 320,
        "wires": []
    },
    {
        "id": "afdc158f067c4515",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP9745759/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2960,
        "y": 280,
        "wires": [
            [
                "b2a7e53261a2c606"
            ]
        ]
    },
    {
        "id": "217e3e61d3d78dd1",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP1128666/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2960,
        "y": 340,
        "wires": [
            [
                "b2a7e53261a2c606"
            ]
        ]
    },
    {
        "id": "999fb2be48619003",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP10796726/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2960,
        "y": 400,
        "wires": [
            [
                "b2a7e53261a2c606"
            ]
        ]
    },
    {
        "id": "7e7279cee04240c9",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP3098241/switch/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 3980,
        "y": 400,
        "wires": [
            [
                "7c565f54f9fe230f"
            ]
        ]
    },
    {
        "id": "c1375f45c3ebe815",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP3098241/led/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 3970,
        "y": 340,
        "wires": [
            [
                "7c565f54f9fe230f"
            ]
        ]
    },
    {
        "id": "b6cb9656a29fb11e",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP1128666/led/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 3970,
        "y": 460,
        "wires": [
            [
                "7c565f54f9fe230f"
            ]
        ]
    },
    {
        "id": "e8ad4edc3be68f3f",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP1128666/switch/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 3980,
        "y": 520,
        "wires": [
            [
                "7c565f54f9fe230f"
            ]
        ]
    },
    {
        "id": "9e791f450111fc5b",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP10796726/led/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 3980,
        "y": 580,
        "wires": [
            [
                "7c565f54f9fe230f"
            ]
        ]
    },
    {
        "id": "93fd4d4a96271b8e",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP10796726/switch/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "2d0f5eee09169370",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 3990,
        "y": 640,
        "wires": [
            [
                "7c565f54f9fe230f"
            ]
        ]
    },
    {
        "id": "c8b543150e80b30a",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "ALMACENAMIENTO ",
        "info": "",
        "x": 2870,
        "y": 120,
        "wires": []
    },
    {
        "id": "bf25b4e9311beda6",
        "type": "http response",
        "z": "a66943788f88412d",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Disposition": "attachment; filename=Medidas_Sensores.csv"
        },
        "x": 4430,
        "y": 1080,
        "wires": []
    },
    {
        "id": "0c9184e55eb89155",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Unicode y separador",
        "func": "//add Unicode BOM character (byte order mark) to make EXCEL knows this is UTF-8\nif(global.get(\"separador_decimal\")==\"punto\")\n{\n    msg.payload='\\ufeff'+msg.payload;\n\n}\nelse\n{\n    msg.payload='\\ufeff'+(msg.payload).replace(/\\./g,\",\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4260,
        "y": 1080,
        "wires": [
            [
                "bf25b4e9311beda6"
            ]
        ]
    },
    {
        "id": "e1d8a6f8819bd421",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta de los Sensores",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"desde\") || ahora);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nvar placa = String(global.get(\"ID_PLACA\"));\n\nmsg.payload=\n[\n    { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio , \"$lte\": final } },{\"CHIPID\":placa} ]}},\n   \n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"Humedad\": \"$DHT11.hum\",\n        \"Vcc\": \"$Vcc\",\n        }\n    },\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3490,
        "y": 1080,
        "wires": [
            [
                "d19935a77ca52241"
            ]
        ]
    },
    {
        "id": "87cbaa3d296b6363",
        "type": "http in",
        "z": "a66943788f88412d",
        "name": "",
        "url": "/registros_sensores",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 3210,
        "y": 1080,
        "wires": [
            [
                "e1d8a6f8819bd421"
            ]
        ]
    },
    {
        "id": "63af23c4de638ad7",
        "type": "ui_template",
        "z": "a66943788f88412d",
        "group": "a34ffe7a.04009",
        "name": "Sensores",
        "order": 5,
        "width": "0",
        "height": "0",
        "format": "<style>\n.button {\n    text-align: center;\n    font: bold 17px Arial;\n    text-decoration: none;\n    background-color: #339966;\n    color: white;\n    padding: 8px 10px;\n    border: 2px solid #CCCCCC;\n  }\n  \n  .button:hover\n  {\n   background-color: #26734d;\n  }\n\n</style>\n<a href=\"/registros_sensores\" class=\"button\">Descarga registro de sensores en CSV (EXCEL)</a>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3170.0000228881836,
        "y": 934.9998197555542,
        "wires": [
            []
        ]
    },
    {
        "id": "126c810fe28cf106",
        "type": "csv",
        "z": "a66943788f88412d",
        "name": "",
        "sep": ";",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "date,Temperatura, Humedad, Vcc",
        "skip": 0,
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 4090,
        "y": 1080,
        "wires": [
            [
                "0c9184e55eb89155"
            ]
        ]
    },
    {
        "id": "f476fc262b07f174",
        "type": "ui_switch",
        "z": "a66943788f88412d",
        "name": "separdor decimal",
        "label": "{{msg.topic}}",
        "tooltip": "",
        "group": "a34ffe7a.04009",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 3250,
        "y": 1660,
        "wires": [
            [
                "f6d3d87af0c7b2bc"
            ]
        ]
    },
    {
        "id": "6311a9306288e81f",
        "type": "inject",
        "z": "a66943788f88412d",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 3230.9970664978027,
        "y": 1582.9118814468384,
        "wires": [
            [
                "f6d3d87af0c7b2bc"
            ]
        ]
    },
    {
        "id": "f6d3d87af0c7b2bc",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "set global separador_decimal",
        "func": "if(msg.payload===true)\n{\n    global.set(\"separador_decimal\",\"coma\");\n    msg.topic=\"separador decimal = coma\";\n}\nelse\n{\n    global.set(\"separador_decimal\",\"punto\");\n    msg.topic=\"separador decimal = punto\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 3559.0084533691406,
        "y": 1583.6192541122437,
        "wires": [
            [
                "f476fc262b07f174"
            ]
        ]
    },
    {
        "id": "8a0f0240a6321167",
        "type": "ui_date_picker",
        "z": "a66943788f88412d",
        "name": "",
        "label": "Fecha inicio",
        "group": "a34ffe7a.04009",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 3390,
        "y": 1400,
        "wires": [
            [
                "8b709065ca5555d6"
            ]
        ]
    },
    {
        "id": "c0a61dabc7f2f5dc",
        "type": "ui_date_picker",
        "z": "a66943788f88412d",
        "name": "",
        "label": "Fecha final",
        "group": "a34ffe7a.04009",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "x": 3393.0113525390625,
        "y": 1448.9942374229431,
        "wires": [
            [
                "0162104cbf088c9f"
            ]
        ]
    },
    {
        "id": "8b709065ca5555d6",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "desde",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3586.0056762695312,
        "y": 1398.6618876457214,
        "wires": [
            []
        ]
    },
    {
        "id": "0162104cbf088c9f",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hasta",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3589.232955932617,
        "y": 1449.5454421043396,
        "wires": [
            []
        ]
    },
    {
        "id": "8e4daef37b939324",
        "type": "inject",
        "z": "a66943788f88412d",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3192.008499145508,
        "y": 1424.420440196991,
        "wires": [
            [
                "8a0f0240a6321167",
                "c0a61dabc7f2f5dc"
            ]
        ]
    },
    {
        "id": "5db4defa464eaa1a",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Controles para seleccionar fechas",
        "info": "",
        "x": 3240,
        "y": 1360,
        "wires": []
    },
    {
        "id": "fec171ba580fc290",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Botón en HTML para lanzar descarga de fichero",
        "info": "",
        "x": 3279.789779663086,
        "y": 887.0822734832764,
        "wires": []
    },
    {
        "id": "f3a80ec8a0591e74",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Flujo para descarga de fichero los datos ",
        "info": "",
        "x": 3240,
        "y": 1020,
        "wires": []
    },
    {
        "id": "cad1b8af7e5354de",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Selector de separador decimal",
        "info": "",
        "x": 3243.01123046875,
        "y": 1522.5740060806274,
        "wires": []
    },
    {
        "id": "09f493d84795aceb",
        "type": "http in",
        "z": "a66943788f88412d",
        "name": "",
        "url": "/registros_conexion",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 3210,
        "y": 1160,
        "wires": [
            [
                "6f64ad81052d4ed1"
            ]
        ]
    },
    {
        "id": "6f64ad81052d4ed1",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta de las Conexiones",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"desde\") || ahora);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\nvar placa = String(global.get(\"ID_PLACA\"));\nmsg.payload=\n[\n     { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio , \"$lte\": final } },{\"CHIPID\":placa} ]}},\n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"IP\": \"$Wifi.IP\",\n        \"SSId\": \"$Wifi.SSId\",\n        \"RSSI\": \"$Wifi.RSSI\",\n        }\n    },\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 1160,
        "wires": [
            [
                "cc5658efd7431a7c"
            ]
        ]
    },
    {
        "id": "cc5658efd7431a7c",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 3820,
        "y": 1160,
        "wires": [
            [
                "d442e811f1715435"
            ]
        ]
    },
    {
        "id": "d442e811f1715435",
        "type": "csv",
        "z": "a66943788f88412d",
        "name": "",
        "sep": ";",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "date,IP, SSId, RSSI",
        "skip": 0,
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 4110,
        "y": 1160,
        "wires": [
            [
                "276d8527b231f708"
            ]
        ]
    },
    {
        "id": "276d8527b231f708",
        "type": "http response",
        "z": "a66943788f88412d",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Disposition": "attachment; filename=Conexiones.csv"
        },
        "x": 4250,
        "y": 1160,
        "wires": []
    },
    {
        "id": "9ebfdc4512bfe8cb",
        "type": "ui_template",
        "z": "a66943788f88412d",
        "group": "a34ffe7a.04009",
        "name": "Conexiones",
        "order": 6,
        "width": "0",
        "height": "0",
        "format": "<style>\n.button {\n    text-align: center;\n    font: bold 17px Arial;\n    text-decoration: none;\n    background-color: #339966;\n    color: white;\n    padding: 8px 10px;\n    border: 2px solid #CCCCCC;\n  }\n  \n  .button:hover\n  {\n   background-color: #26734d;\n  }\n\n</style>\n<a href=\"/registros_conexion\" class=\"button\">Descarga registro de conexiones en CSV (EXCEL)</a>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3350,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "bacad9773d354e87",
        "type": "http in",
        "z": "a66943788f88412d",
        "name": "",
        "url": "/registros_actuadores",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 3210,
        "y": 1240,
        "wires": [
            [
                "06527a8e267c42f8"
            ]
        ]
    },
    {
        "id": "06527a8e267c42f8",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta de los Actuadores",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"desde\") || ahora);\nvar hasta = new Date(global.get(\"hasta\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\nvar placa = String(global.get(\"ID_PLACA\"));\n\nmsg.payload=\n[\n    { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio , \"$lte\": final } },{\"CHIPID\":placa} ]}},\n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"LED\": \"$LED\",\n        \"SWITCH\": \"$SWITCH\",\n        \"ORIGEN\": \"$origen\"\n        }\n    },\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 1240,
        "wires": [
            [
                "d938dcbe4091d510"
            ]
        ]
    },
    {
        "id": "8231a4d1a2b2d757",
        "type": "csv",
        "z": "a66943788f88412d",
        "name": "",
        "sep": ";",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "date,LED,SWITCH,ORIGEN",
        "skip": 0,
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 4130,
        "y": 1240,
        "wires": [
            [
                "5e766d6ab2e2dc59"
            ]
        ]
    },
    {
        "id": "5e766d6ab2e2dc59",
        "type": "http response",
        "z": "a66943788f88412d",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Disposition": "attachment; filename=Actuadores.csv"
        },
        "x": 4270,
        "y": 1240,
        "wires": []
    },
    {
        "id": "62068ab1af3b6524",
        "type": "ui_template",
        "z": "a66943788f88412d",
        "group": "a34ffe7a.04009",
        "name": "Actuadores",
        "order": 7,
        "width": "0",
        "height": "0",
        "format": "<style>\n.button {\n    text-align: center;\n    font: bold 17px Arial;\n    text-decoration: none;\n    background-color: #339966;\n    color: white;\n    padding: 8px 10px;\n    border: 2px solid #CCCCCC;\n  }\n  \n  .button:hover\n  {\n   background-color: #26734d;\n  }\n\n</style>\n<a href=\"/registros_actuadores\" class=\"button\">Descarga registro de los cambios actuadores en CSV (EXCEL)</a>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 3550,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "d938dcbe4091d510",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Actuadores",
        "operation": "aggregate",
        "x": 3840,
        "y": 1240,
        "wires": [
            [
                "8231a4d1a2b2d757"
            ]
        ]
    },
    {
        "id": "d19935a77ca52241",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 3820,
        "y": 1080,
        "wires": [
            [
                "126c810fe28cf106"
            ]
        ]
    },
    {
        "id": "f03bed9bc7611182",
        "type": "ui_dropdown",
        "z": "a66943788f88412d",
        "name": "idESP",
        "label": "ESP:",
        "tooltip": "",
        "place": "seleccione un ESP",
        "group": "a34ffe7a.04009",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ESP3098241",
                "value": "ESP3098241",
                "type": "str"
            },
            {
                "label": "ESP9745759",
                "value": "ESP9745759",
                "type": "str"
            },
            {
                "label": "ESP1128666",
                "value": "ESP1128666",
                "type": "str"
            },
            {
                "label": "ESP10796726",
                "value": "ESP10796726",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "idESP",
        "x": 3150,
        "y": 1280,
        "wires": [
            [
                "35cae03435749f28"
            ]
        ]
    },
    {
        "id": "35cae03435749f28",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ID_PLACA",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3360,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "58f833cb0a186589",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "DESCARGA DE DATOS",
        "info": "",
        "x": 3180,
        "y": 820,
        "wires": []
    },
    {
        "id": "b220efa24629f335",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "formato Uptime",
        "func": "var dias=(msg.payload*1.15741/100000000);\nvar partedecimal=dias%1;\nvar horas=(partedecimal*24/1);\nvar partedecimalh=horas%1;\nvar minutos=(partedecimalh*60/1);\nvar partedecimalm=(minutos%1);\n\nmsg.payload=(dias-partedecimal) + \" dias y \" +(horas-partedecimalh) +\" horas y \"+ ( minutos-partedecimalm )+\" minutos\" ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 700,
        "wires": [
            [
                "2a2031e1097930ec"
            ]
        ]
    },
    {
        "id": "1c63d8799ee06ca4",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "formato Uptime",
        "func": "var dias=(msg.payload*1.15741/100000000);\nvar partedecimal=dias%1;\nvar horas=(partedecimal*24/1);\nvar partedecimalh=horas%1;\nvar minutos=(partedecimalh*60/1);\nvar partedecimalm=(minutos%1);\n\nmsg.payload=(dias-partedecimal) + \" dias y \" +(horas-partedecimalh) +\" horas y \"+ ( minutos-partedecimalm )+\" minutos\" ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1540,
        "wires": [
            [
                "3d6dc78e50bbdfee"
            ]
        ]
    },
    {
        "id": "9aa834428d720b6f",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "formato Uptime",
        "func": "var dias=(msg.payload*1.15741/100000000);\nvar partedecimal=dias%1;\nvar horas=(partedecimal*24/1);\nvar partedecimalh=horas%1;\nvar minutos=(partedecimalh*60/1);\nvar partedecimalm=(minutos%1);\n\nmsg.payload=(dias-partedecimal) + \" dias y \" +(horas-partedecimalh) +\" horas y \"+ ( minutos-partedecimalm )+\" minutos\" ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2235.83349609375,
        "y": 1558.6112060546875,
        "wires": [
            [
                "821149eb44bc298b"
            ]
        ]
    },
    {
        "id": "5de1f2f4bbc3d03c",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "formato Uptime",
        "func": "var dias=(msg.payload*1.15741/100000000);\nvar partedecimal=dias%1;\nvar horas=(partedecimal*24/1);\nvar partedecimalh=horas%1;\nvar minutos=(partedecimalh*60/1);\nvar partedecimalm=(minutos%1);\n\nmsg.payload=(dias-partedecimal) + \" dias y \" +(horas-partedecimalh) +\" horas y \"+ ( minutos-partedecimalm )+\" minutos\" ;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2219.166748046875,
        "y": 678.0556030273438,
        "wires": [
            [
                "abb2da4591b5222b"
            ]
        ]
    },
    {
        "id": "9ae556f70c612077",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "MAX, MIN TEMPERATURA",
        "func": "const id_ESP=3098241;\n\nvar temp=msg.payload;\n\n//notificaciones:\nvar max_temp=flow.get(\"max_temp\")||40;\nvar min_temp=flow.get(\"min_temp\")||10;\n\n\nif (temp>=max_temp)\n{\n    msg.payload=\"TEMPERATURA MÁXIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\nelse if (temp<=min_temp)\n{\n    msg.payload=\"TEMPERATURA MÍNIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1660,
        "wires": [
            [
                "0c645d59df992a02"
            ]
        ]
    },
    {
        "id": "f62e9d95e6315937",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "MAX, MIN TEMPERATURA",
        "func": "const id_ESP=3098241;\n\nvar temp=msg.payload;\n\n//notificaciones:\nvar max_temp=flow.get(\"max_temp\")||40;\nvar min_temp=flow.get(\"min_temp\")||10;\n\n\nif (temp>=max_temp)\n{\n    msg.payload=\"TEMPERATURA MÁXIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\nelse if (temp<=min_temp)\n{\n    msg.payload=\"TEMPERATURA MÍNIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2310,
        "y": 1660,
        "wires": [
            [
                "1d67f8e53b951293"
            ]
        ]
    },
    {
        "id": "810e75c937a7bb24",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "MAX, MIN TEMPERATURA",
        "func": "const id_ESP=3098241;\n\nvar temp=msg.payload;\n\n//notificaciones:\nvar max_temp=flow.get(\"max_temp\")||40;\nvar min_temp=flow.get(\"min_temp\")||10;\n\n\nif (temp>=max_temp)\n{\n    msg.payload=\"TEMPERATURA MÁXIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\nelse if (temp<=min_temp)\n{\n    msg.payload=\"TEMPERATURA MÍNIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2290,
        "y": 800,
        "wires": [
            [
                "1df5bc507c3bfade"
            ]
        ]
    },
    {
        "id": "3b1a4120b0df603f",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "MAX, MIN HUMEDAD",
        "func": "const id_ESP=3098241;\n\nvar hum=msg.payload;\n\n//notificaciones\nvar max_hum=flow.get(\"max_hum\")||80;\nvar min_hum=flow.get(\"min_hum\")||20;\n\nif (hum>=max_hum)\n{\n    msg.payload=\"HUMEDAD MÁXIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\nelse if (hum<=min_hum)\n{\n    msg.payload=\"HUMEDAD MÍNIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 967.5,
        "y": 1761,
        "wires": [
            [
                "28a9890caf339cda"
            ]
        ]
    },
    {
        "id": "e2c791af177c3483",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "MAX, MIN HUMEDAD",
        "func": "const id_ESP=3098241;\n\nvar hum=msg.payload;\n\n//notificaciones\nvar max_hum=flow.get(\"max_hum\")||80;\nvar min_hum=flow.get(\"min_hum\")||20;\n\nif (hum>=max_hum)\n{\n    msg.payload=\"HUMEDAD MÁXIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\nelse if (hum<=min_hum)\n{\n    msg.payload=\"HUMEDAD MÍNIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2280,
        "y": 1780,
        "wires": [
            [
                "816e890971f47613"
            ]
        ]
    },
    {
        "id": "884e91fbac16f99b",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "MAX, MIN HUMEDAD",
        "func": "const id_ESP=3098241;\n\nvar hum=msg.payload;\n\n//notificaciones\nvar max_hum=flow.get(\"max_hum\")||80;\nvar min_hum=flow.get(\"min_hum\")||20;\n\nif (hum>=max_hum)\n{\n    msg.payload=\"HUMEDAD MÁXIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\nelse if (hum<=min_hum)\n{\n    msg.payload=\"HUMEDAD MÍNIMA ALCANZADA\";\n    msg.topic=\"ALERTA EN: ESP-\"+id_ESP;\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2240,
        "y": 900,
        "wires": [
            [
                "da341c4f5e6f7737"
            ]
        ]
    },
    {
        "id": "e842f419c32c06cc",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "mensaje bienvenida",
        "func": "if(msg.payload.content.substring(0,1)!=\"/\")\n{\n msg.payload.content=\"Hola \"+msg.originalMessage.chat.first_name+\"!! soy el bot del Proyecto IoT I. Antes de comenzar, ¿a qué placa desea acceder?\\n\\nPlaca 1: /ESP_3098241\\n\\nPlaca 2: /ESP_9745759\\n\\nPlaca 3: /ESP_1128666\\n\\nPlaca 4: /ESP_10796726\\n\\n\\n Si desea volver a comenzar utilice el comando /start\";\n return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3590,
        "y": 1860,
        "wires": [
            [
                "cd11772549930220"
            ]
        ]
    },
    {
        "id": "518f6609d8934fde",
        "type": "telegram receiver",
        "z": "a66943788f88412d",
        "name": "",
        "bot": "f5bccb31401f3bc2",
        "saveDataDir": "",
        "filterCommands": true,
        "x": 3170,
        "y": 1860,
        "wires": [
            [
                "e842f419c32c06cc"
            ],
            []
        ]
    },
    {
        "id": "b9c7907ea9b15a63",
        "type": "telegram sender",
        "z": "a66943788f88412d",
        "name": "",
        "bot": "f5bccb31401f3bc2",
        "haserroroutput": false,
        "outputs": 1,
        "x": 4590,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "577c67f5878de09d",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/start",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3140,
        "y": 1940,
        "wires": [
            [
                "e842f419c32c06cc"
            ],
            []
        ]
    },
    {
        "id": "5a8083eecc7529ec",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/sensores",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3130,
        "y": 2180,
        "wires": [
            [
                "7ee18e7d7082dc32"
            ],
            []
        ]
    },
    {
        "id": "7ee18e7d7082dc32",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "mensaje explicativo",
        "func": "\n msg.payload.content=\"🌡 SENSORES 🌡\\n\\nPara conocer el estado actual de los sensores utilice el comando: \\n/estado_sensores\\n\\nPara conocer el valor medio en un intervalo determinado utilice: \\n/valor_det\\n\";\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3360,
        "y": 2180,
        "wires": [
            [
                "b9c7907ea9b15a63"
            ]
        ]
    },
    {
        "id": "c1ecb62e4d6a2b44",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/estado_sensores",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3220,
        "y": 2320,
        "wires": [
            [
                "2e9e94088495e9fa",
                "572c3b4b735b8b8c"
            ],
            []
        ]
    },
    {
        "id": "df22034aaf84a4f3",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/actuadores",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3260,
        "y": 2760,
        "wires": [
            [
                "d652f299fc96b756"
            ],
            []
        ]
    },
    {
        "id": "d652f299fc96b756",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "mensaje explicativo",
        "func": "\n msg.payload.content=\"💡 ACTUADORES 💡\\n\\nPara poder conocer el estado de los actuadores utilice el comando: \\n/estado_actuadores\\n\\nPara modififcar el valor de algun actuador utilice el comando: \\n/mod_actuador\\n\";\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 2760,
        "wires": [
            [
                "2d7c28da2bb329c8"
            ]
        ]
    },
    {
        "id": "35f6c5367282ba00",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/estado_actuadores",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3310,
        "y": 2840,
        "wires": [
            [
                "b68cefb0981d95f1"
            ],
            []
        ]
    },
    {
        "id": "73c9e8fde49cb265",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Estado de actuadores",
        "func": "var led = msg.payload[0].LED;\nvar sww = String(msg.payload[0].SWITCH);\n\nmsg.payload = {};\nmsg.payload.chatId = global.get(\"chatId\");\nmsg.payload.type = \"message\";\nmsg.payload.content=\"El valor actual del LED es: \"+led+\"\\nEl estado actual del SWITCH es: \"+sww;\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4070,
        "y": 2840,
        "wires": [
            [
                "2d7c28da2bb329c8"
            ]
        ]
    },
    {
        "id": "aa5a93b078739a0d",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/mod_actuador",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3330,
        "y": 2940,
        "wires": [
            [
                "43dda7bf06e8f084"
            ],
            []
        ]
    },
    {
        "id": "43dda7bf06e8f084",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "mensaje explicativo",
        "func": " var estado_led = global.get(\"led\");\n var estado_sw = global.get(\"sw\");\n var estado_switch;\n \n if (estado_sw == 1)\n {\n    estado_switch = \"ON\";\n    }else{ \n    estado_switch = \"OFF\";\n}\n msg.payload.content=\"El nivel actual del led es: \"+estado_led+\"\\n\\nEl estado actual del SWITCH es: \"+estado_switch+\"\\n\\nPara modificar el valor LED💡 utilice el comando /LED y seguidamente, introduzca el valor en porcentaje deseado.\\n\\nPor ejemplo: /LED 85\\n\\nPara modificar el valor del SWITCH 💡 utilice el comando /SWITCH y seguidamente, introduca el valor 0 o 1 para apagarlo o encenderlo respectivamente.\\n\\nPor ejemplo /SWITCH 1 \";\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3600,
        "y": 2940,
        "wires": [
            [
                "4b3906ce386556c9"
            ]
        ]
    },
    {
        "id": "62aa3139d815107f",
        "type": "telegram sender",
        "z": "a66943788f88412d",
        "name": "",
        "bot": "f5bccb31401f3bc2",
        "haserroroutput": false,
        "outputs": 1,
        "x": 3160,
        "y": 3200,
        "wires": [
            []
        ]
    },
    {
        "id": "3c6f76023a7b0e6f",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/LED",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3380,
        "y": 3020,
        "wires": [
            [
                "703da038b3d02312"
            ],
            []
        ]
    },
    {
        "id": "703da038b3d02312",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Obtener valor del actuador",
        "func": "var est_led= parseInt(msg.payload.content);\nvar id = msg.payload.chatId;\nmsg.payload = {};\nif((est_led >= 0 ) && (est_led <= 100 ))\n{   \n    msg.payload.level = est_led;\n    msg.payload.id = id;\n}\nelse{\n\nmsg.payload.type = \"message\";\nmsg.payload.content = \"❌ Por favor introduzca un valor entre 0 y 100\";\n}\n\nmsg.payload.chatId = id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3630,
        "y": 3020,
        "wires": [
            [
                "f3985fa0bf729922",
                "a6b273dcc9980074",
                "44b464e2e67a41b3",
                "4b3906ce386556c9"
            ]
        ]
    },
    {
        "id": "c9214914d2facd24",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/SWITCH",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3370,
        "y": 3080,
        "wires": [
            [
                "d68a0b29e1265404"
            ],
            []
        ]
    },
    {
        "id": "d68a0b29e1265404",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Obtener valor del actuador",
        "func": "var est_sw= parseInt(msg.payload.content);\nvar id = msg.payload.chatId;\nmsg.payload = {};\nif((est_sw == 0 ) || (est_sw == 1 ))\n{ \n    msg.payload.level = est_sw;\n    msg.payload.id = id;\n}\nelse{\n\nmsg.payload.type = \"message\";\nmsg.payload.content = \"❌ Por favor introduzca o 0 o 1 para apagar o encender el SWITCH\";\n}\nmsg.payload.chatId = id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3630,
        "y": 3100,
        "wires": [
            [
                "01e62b22b3f29017",
                "e20ca77ca7728de5",
                "9a4cf0cc09fa3be9",
                "4b3906ce386556c9"
            ]
        ]
    },
    {
        "id": "a02b422b6152f476",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/valor_det",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3230,
        "y": 2460,
        "wires": [
            [
                "b4c7a3efbcc2aaa9"
            ],
            []
        ]
    },
    {
        "id": "b4c7a3efbcc2aaa9",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "mensaje explicativo",
        "func": " msg.payload.content= \"Para conocer los datos de temperatura y humedad de los siguientes periodos, utilice los comandos asignados:\\n\\n⏱Número de horas previas hasta ahora: /horas + nº horas.\\n\\n📆Número de días previos hasta ahora: /dias + nº días.\\n\\n📅Número de semanas previas hasta ahora: /semanas + nº semanas.\\n\\nPor ejemplo: /dias 24\"\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3580,
        "y": 2460,
        "wires": [
            [
                "b9c7907ea9b15a63"
            ]
        ]
    },
    {
        "id": "7d5fe2cf3aa52853",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/horas",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3300,
        "y": 2560,
        "wires": [
            [
                "9e1917070e2ae522",
                "572c3b4b735b8b8c"
            ],
            []
        ]
    },
    {
        "id": "e1b34a9f96317291",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/dias",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3300,
        "y": 2600,
        "wires": [
            [
                "7adc3a6768401a70",
                "572c3b4b735b8b8c"
            ],
            []
        ]
    },
    {
        "id": "5903ddf6a4569a7d",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/semanas",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3310,
        "y": 2640,
        "wires": [
            [
                "4849239d9fdbba7f",
                "572c3b4b735b8b8c"
            ],
            []
        ]
    },
    {
        "id": "1d635568793d2f15",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta dias",
        "func": "if (msg.payload.fecha >0)\n{\ndias = msg.payload.fecha;\n\nvar ms_per_minute = 60000;\n// obtiene el timestamp actual\nvar ahora = new Date().getTime();\n// crear objeto fecha con la hora de hace 12 horas\nvar fecha = new Date(ahora-60*dias*24*ms_per_minute);\n\nvar inicio = new Date(fecha.getFullYear(),fecha.getMonth(),fecha.getDate(),fecha.getHours());\nvar placa = global.get(\"placa_selec\");\nmsg.payload=\n[\n    { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio } },{\"CHIPID\":placa} ]}},\n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"Humedad\": \"$DHT11.hum\",\n        \"Vcc\": \"$Vcc\",\n        }\n    },\n    { \"$group\": {\n        \"_id\": 0,\n        \"Tmedia\":{\"$avg\":\"$Temperatura\"},\n        \"Tmax\":  {\"$max\":\"$Temperatura\"},\n        \"Tmin\":  {\"$min\":\"$Temperatura\"},\n        \"datos\": {\"$sum\":1},\n        \"Hmedia\":{\"$avg\":\"$Humedad\"},\n        \"Hmax\":  {\"$max\":\"$Humedad\"},\n        \"Hmin\":  {\"$min\":\"$Humedad\"}\n    }},\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3870,
        "y": 2600,
        "wires": [
            [
                "00c1847b51332ba3"
            ]
        ]
    },
    {
        "id": "879d7ce2725e2376",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta semana",
        "func": "if (msg.payload.fecha >0)\n{\nsemanas = msg.payload.fecha;\n\nvar ms_per_minute = 60000;\n// obtiene el timestamp actual\nvar ahora = new Date().getTime();\n// crear objeto fecha con la hora de hace 12 horas\nvar semana = new Date(ahora-60*24*7*semanas*ms_per_minute);\n\nvar inicio = new Date(semana.getFullYear(),semana.getMonth(),semana.getDate(),semana.getHours());\nvar placa = global.get(\"placa_selec\");\n\n\nmsg.payload=\n[\n    { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio } },{\"CHIPID\":placa} ]}},\n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"Humedad\": \"$DHT11.hum\",\n        \"Vcc\": \"$Vcc\",\n        }\n    },\n    { \"$group\": {\n        \"_id\": 0,\n        \"Tmedia\":{\"$avg\":\"$Temperatura\"},\n        \"Tmax\":  {\"$max\":\"$Temperatura\"},\n        \"Tmin\":  {\"$min\":\"$Temperatura\"},\n        \"datos\": {\"$sum\":1},\n        \"Hmedia\":{\"$avg\":\"$Humedad\"},\n        \"Hmax\":  {\"$max\":\"$Humedad\"},\n        \"Hmin\":  {\"$min\":\"$Humedad\"}\n    }},\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3880,
        "y": 2640,
        "wires": [
            [
                "00c1847b51332ba3"
            ]
        ]
    },
    {
        "id": "3cd34718f6b09805",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Datos obtenidos",
        "func": "var TMed = msg.payload[0].Tmedia.toFixed(2);\nvar TMax = msg.payload[0].Tmax;\nvar TMin = msg.payload[0].Tmin;\n\nvar HMed = msg.payload[0].Hmedia.toFixed(2);\nvar HMax = msg.payload[0].Hmax;\nvar HMin = msg.payload[0].Hmin;\n\nvar datos = msg.payload[0].datos;\nvar placa = global.get(\"placa_selec\");\nmsg.payload = {};\nmsg.payload.chatId = global.get(\"chatId\");\nmsg.payload.type = \"message\";\nmsg.payload.content= \"📌TEMPERATURA\\n\\n📊Temperatura media: \"+TMed+\"ºC.\\n📈Temperatura máxima: \"+TMax+\"ºC.\\n📉Temperatura mínima: \"+TMin+\"ºC.\\n\\n📌HUMEDAD\\n\\n📊Humedad media: \"+HMed+\"%.\\n📈Humedad máxima: \"+HMax+\"%.\\n📉Humedad mínima: \"+HMin+\"%.\\n\\nSe han tomado \"+datos+\" datos hasta la fecha.\\n\\nPlaca: \"+placa+\"📲\";\n \n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4490,
        "y": 2600,
        "wires": [
            [
                "b9c7907ea9b15a63"
            ]
        ]
    },
    {
        "id": "e286462239feabc7",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta horas",
        "func": "if (msg.payload.fecha >0)\n{\nhoras = msg.payload.fecha;\nmsg.payload = {};\n\nvar ms_per_minute = 60000;\n// obtiene el timestamp actual\nvar ahora = new Date().getTime();\n// crear objeto fecha con la hora de hace 12 horas\nvar fecha = new Date(ahora-60*horas*ms_per_minute);\n\nvar inicio = new Date(fecha.getFullYear(),fecha.getMonth(),fecha.getDate(),fecha.getHours());\nvar placa = global.get(\"placa_selec\");\nmsg.payload=\n[\n    { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio } },{\"CHIPID\":placa} ]}},\n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"Humedad\": \"$DHT11.hum\",\n        \"Vcc\": \"$Vcc\",\n        }\n    },\n    { \"$group\": {\n        \"_id\": 0,\n        \"Tmedia\":{\"$avg\":\"$Temperatura\"},\n        \"Tmax\":  {\"$max\":\"$Temperatura\"},\n        \"Tmin\":  {\"$min\":\"$Temperatura\"},\n        \"datos\": {\"$sum\":1},\n        \"Hmedia\":{\"$avg\":\"$Humedad\"},\n        \"Hmax\":  {\"$max\":\"$Humedad\"},\n        \"Hmin\":  {\"$min\":\"$Humedad\"}\n    }},\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3870,
        "y": 2560,
        "wires": [
            [
                "00c1847b51332ba3"
            ]
        ]
    },
    {
        "id": "2d7c28da2bb329c8",
        "type": "telegram sender",
        "z": "a66943788f88412d",
        "name": "",
        "bot": "f5bccb31401f3bc2",
        "haserroroutput": false,
        "outputs": 1,
        "x": 4270,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "afd182b19decfc4c",
        "type": "telegram sender",
        "z": "a66943788f88412d",
        "name": "",
        "bot": "f5bccb31401f3bc2",
        "haserroroutput": false,
        "outputs": 1,
        "x": 3890,
        "y": 2480,
        "wires": [
            []
        ]
    },
    {
        "id": "7adc3a6768401a70",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Obtener valor de dias",
        "func": "var fecha= parseInt(msg.payload.content);\nvar id = msg.payload.chatId;\nmsg.payload = {};\nif(fecha > 0)\n{ \n    msg.payload.fecha = fecha;\n\n}\nelse{\nmsg.payload = {};\nmsg.payload.type = \"message\";\nmsg.payload.content = \"❌Por favor introduzca un valor correcto\";\n}\n\nmsg.payload.chatId = id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3530,
        "y": 2600,
        "wires": [
            [
                "1d635568793d2f15",
                "afd182b19decfc4c"
            ]
        ]
    },
    {
        "id": "9e1917070e2ae522",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Obtener valor de horas",
        "func": "var fecha= parseInt(msg.payload.content);\nvar id = msg.payload.chatId;\n\nmsg.payload = {};\nif(fecha > 0 )\n{ \n    msg.payload.fecha = fecha;\n\n}\nelse{\n\nmsg.payload.type = \"message\";\nmsg.payload.content = \"❌Por favor introduzca un valor correcto\";\n\n}\n\nmsg.payload.chatId = id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3540,
        "y": 2560,
        "wires": [
            [
                "e286462239feabc7",
                "afd182b19decfc4c"
            ]
        ]
    },
    {
        "id": "4849239d9fdbba7f",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Obtener valor de semanas",
        "func": "var fecha= parseInt(msg.payload.content);\nmsg.payload = {};\nif(fecha > 0 )\n{ \n    msg.payload.fecha = fecha;\n return msg;\n}\nelse{\n    msg.payload = {};\nmsg.payload.type = \"message\";\nmsg.payload.content = \"❌Por favor introduzca un valor correcto\";\nreturn msg;\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3550,
        "y": 2640,
        "wires": [
            [
                "879d7ce2725e2376",
                "afd182b19decfc4c"
            ]
        ]
    },
    {
        "id": "00c1847b51332ba3",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 4170,
        "y": 2600,
        "wires": [
            [
                "3cd34718f6b09805"
            ]
        ]
    },
    {
        "id": "f3985fa0bf729922",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Number to JSON",
        "func": "var led_level=msg.payload.level;\nvar id = msg.payload.id;\n\nvar data={\"level\":led_level, \"id\": String(id)};\nmsg.payload = {};\nnode.log(typeof data);\nmsg.payload= JSON.stringify(data);\nmsg.topic = \"II1/\"+global.get(\"placa_selec\")+\"/led/cmd\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4000,
        "y": 3000,
        "wires": [
            [
                "98ccafefc18d8e3a"
            ]
        ]
    },
    {
        "id": "98ccafefc18d8e3a",
        "type": "mqtt out",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9316867d5b335f11",
        "x": 4180,
        "y": 3020,
        "wires": []
    },
    {
        "id": "01e62b22b3f29017",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Number to JSON",
        "func": "var led_level=msg.payload.level;\nvar id = msg.payload.id;\n\nvar data={\"level\":led_level, \"id\": String(id)};\nmsg.payload = {};\nnode.log(typeof data);\nmsg.payload= JSON.stringify(data);\nmsg.topic = \"II1/\"+global.get(\"placa_selec\")+\"/switch/cmd\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4000,
        "y": 3040,
        "wires": [
            [
                "98ccafefc18d8e3a"
            ]
        ]
    },
    {
        "id": "572c3b4b735b8b8c",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "chatId",
        "rules": [
            {
                "t": "set",
                "p": "chatId",
                "pt": "global",
                "to": "payload.chatId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3480,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "eebfc8b91821a15f",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Obtención del id del chat para el envio de datos",
        "info": "",
        "x": 3750,
        "y": 2680,
        "wires": []
    },
    {
        "id": "4e3425a0953e7f56",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "TELEGRAM",
        "info": "",
        "x": 3000,
        "y": 1820,
        "wires": []
    },
    {
        "id": "f98e3e4df02bcbdb",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "ID del canal : -1001705665908",
        "info": "",
        "x": 3490,
        "y": 3220,
        "wires": []
    },
    {
        "id": "193e53e11eb77a6e",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/ESP_3098241",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3290,
        "y": 2000,
        "wires": [
            [
                "da8d4c73e0a9e2bd"
            ],
            []
        ]
    },
    {
        "id": "28390ddc0423de2d",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/ESP_9745759",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3470,
        "y": 2000,
        "wires": [
            [
                "e782f1d49abacfc8"
            ],
            []
        ]
    },
    {
        "id": "0c1e6fb9eb819779",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/ESP_1128666",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3650,
        "y": 2000,
        "wires": [
            [
                "27aa61839ada1483"
            ],
            []
        ]
    },
    {
        "id": "c820a3966e42398c",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/ESP_10796726",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 3850,
        "y": 2000,
        "wires": [
            [
                "9e4d77e54a2d72a1"
            ],
            []
        ]
    },
    {
        "id": "da8d4c73e0a9e2bd",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "\nmsg.payload.placa = \"ESP3098241\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3420,
        "y": 1940,
        "wires": [
            [
                "9ecef4dfa6464349"
            ]
        ]
    },
    {
        "id": "e782f1d49abacfc8",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "\nmsg.payload.placa = \"ESP9745759\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3590,
        "y": 1940,
        "wires": [
            [
                "9ecef4dfa6464349"
            ]
        ]
    },
    {
        "id": "27aa61839ada1483",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "\nmsg.payload.placa = \"ESP1128666\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3750,
        "y": 1940,
        "wires": [
            [
                "9ecef4dfa6464349"
            ]
        ]
    },
    {
        "id": "9e4d77e54a2d72a1",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "\nmsg.payload.placa = \"ESP10796726\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3910,
        "y": 1940,
        "wires": [
            [
                "9ecef4dfa6464349"
            ]
        ]
    },
    {
        "id": "9ecef4dfa6464349",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "placa_selec",
        "rules": [
            {
                "t": "set",
                "p": "placa_selec",
                "pt": "global",
                "to": "payload.placa",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4040,
        "y": 1900,
        "wires": [
            [
                "9a483fcc6f8c6aab"
            ]
        ]
    },
    {
        "id": "cd11772549930220",
        "type": "telegram sender",
        "z": "a66943788f88412d",
        "name": "",
        "bot": "f5bccb31401f3bc2",
        "haserroroutput": false,
        "outputs": 1,
        "x": 3870,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "9a483fcc6f8c6aab",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Información:",
        "func": "var placa = global.get(\"placa_selec\");\n\nif(msg.payload.content.substring(0,1)!=\"/\")\n{\n msg.payload.content=\"📲: \"+placa+\"\\n\\n🌡Para conocer el estado de los sensores utilice el comando /sensores\\n\\n💡Para modificar o consultar los actuadores utilice el comando /actuadores.\\n\\n🚦Para programar una alarma utilice el comando /alarma\";\n return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4200,
        "y": 1900,
        "wires": [
            [
                "72e92c7ce0a8d44f"
            ]
        ]
    },
    {
        "id": "641436669bc2bd50",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 3810,
        "y": 2320,
        "wires": [
            [
                "e53c2a41a056478a"
            ]
        ]
    },
    {
        "id": "2e9e94088495e9fa",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta Actual",
        "func": "var placa = global.get(\"placa_selec\");\nmsg.payload=\n[\n    { \"$match\": {\"CHIPID\":placa} },\n   \n    { \"$project\": {\n        \"_id\": 0,\n        \"date\":1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"Humedad\": \"$DHT11.hum\",\n        }\n    },\n    { \"$sort\": {\"date\": -1} },\n    {\"$limit\" : 1}\n];\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3510,
        "y": 2320,
        "wires": [
            [
                "641436669bc2bd50"
            ]
        ]
    },
    {
        "id": "e53c2a41a056478a",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Datos obtenidos",
        "func": "var Temp = msg.payload[0].Temperatura;\nvar Hum = msg.payload[0].Humedad;\nvar fecha = msg.payload[0].date;\n\nvar ahora = new Date().getTime();\nvar ultimo = fecha.getTime();\n\nmsg.payload = {};\nmsg.payload.chatId = global.get(\"chatId\");\nmsg.payload.type = \"message\";\nif ((ultimo +300000)<= ahora)\n{\n    msg.payload.content = \"No se han recibido datos en los últimos 5 minutos\";\n}\nelse{\nmsg.payload.content= \"📍La temperatura actual es de \"+Temp+\"ºC.\\n\\n📍La humedad actual es de \"+Hum+\"%.\";\n}\n return msg;\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4110,
        "y": 2320,
        "wires": [
            [
                "b9c7907ea9b15a63",
                "fdd849109fb16cda"
            ]
        ]
    },
    {
        "id": "b68cefb0981d95f1",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta Actual",
        "func": "var placa = global.get(\"placa_selec\");\nmsg.payload=\n[\n    { \"$match\": {\"CHIPID\":placa} },\n   \n    { \"$project\": {\n        \"_id\": 0,\n        \"date\":1,\n        \"LED\": \"$LED\",\n        \"SWITCH\": \"$SWITCH\",\n        }\n    },\n    { \"$sort\": {\"date\": -1} },\n    {\"$limit\" : 1}\n];\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3520,
        "y": 2840,
        "wires": [
            [
                "5d1d8b7954cd7f7d"
            ]
        ]
    },
    {
        "id": "5d1d8b7954cd7f7d",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 3790,
        "y": 2840,
        "wires": [
            [
                "73c9e8fde49cb265"
            ]
        ]
    },
    {
        "id": "a6b273dcc9980074",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta Actual",
        "func": "var placa = global.get(\"placa_selec\");\nmsg.payload=\n[\n    { \"$match\": {\"CHIPID\":placa} },\n   \n    { \"$project\": {\n        \"_id\": 0,\n        \"date\":1,\n        \"LED\": \"$LED\",\n        \"SWITCH\": \"$SWITCH\",\n        }\n    },\n    { \"$sort\": {\"date\": -1} },\n    {\"$limit\" : 1}\n];\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3970,
        "y": 3120,
        "wires": [
            [
                "def766616ce62203"
            ]
        ]
    },
    {
        "id": "def766616ce62203",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 4260,
        "y": 3120,
        "wires": [
            [
                "ac4c904c308ebb4c"
            ]
        ]
    },
    {
        "id": "ac4c904c308ebb4c",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Estado de actuadores",
        "func": "var led = msg.payload[0].LED;\nmsg.payload = {};\n\nmsg.payload.led = led;\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4540,
        "y": 3120,
        "wires": [
            [
                "4c7ea64e05acfef5"
            ]
        ]
    },
    {
        "id": "e20ca77ca7728de5",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta Actual",
        "func": "var placa = global.get(\"placa_selec\");\nmsg.payload=\n[\n    { \"$match\": {\"CHIPID\":placa} },\n   \n    { \"$project\": {\n        \"_id\": 0,\n        \"date\":1,\n        \"LED\": \"$LED\",\n        \"SWITCH\": \"$SWITCH\",\n        }\n    },\n    { \"$sort\": {\"date\": -1} },\n    {\"$limit\" : 1}\n];\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3970,
        "y": 3200,
        "wires": [
            [
                "a2616698282068a7"
            ]
        ]
    },
    {
        "id": "a2616698282068a7",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 4260,
        "y": 3200,
        "wires": [
            [
                "b048b9fa73da66d3"
            ]
        ]
    },
    {
        "id": "b048b9fa73da66d3",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Estado de actuadores",
        "func": "var sw = msg.payload[0].SWITCH;\nmsg.payload = {};\n\nmsg.payload.sw = sw;\n return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4580,
        "y": 3200,
        "wires": [
            [
                "5a77acc4e4c9a857"
            ]
        ]
    },
    {
        "id": "44b464e2e67a41b3",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Aviso cambio del LED",
        "func": "var cambio = msg.payload.level;\nvar actual = global.get(\"LED\");\nif ((cambio >= 0)&&(cambio <= 100))\n{\nif (cambio != actual)\n{\nmsg.payload.type = \"message\";\nmsg.payload.content = \"Modificación de la intensidad del LED💡 de la placa \"+global.get(\"placa_selec\")+\"\\n\\nCambio del \"+actual+\"%, al \"+cambio+\"%\";\nmsg.payload.chatId = String(-1001705665908) ;\nreturn msg;\n}}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3990,
        "y": 3340,
        "wires": [
            [
                "6e4ffec729e6fb45"
            ]
        ]
    },
    {
        "id": "9a4cf0cc09fa3be9",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Aviso cambio del SWITCH",
        "func": "var cambio = msg.payload.level;\nvar actual = global.get(\"SWITCH\");\nvar cambio_sw;\nmsg.payload = {};\nif ((cambio == 1) || (cambio ==0))\n{\nif (cambio != actual)\n{\n    if (cambio == 1)\n    {cambio_sw = \"ON\"}else{cambio_sw = \"OFF\"}\n    \nmsg.payload.type = \"message\";\nmsg.payload.content = \" Modificación del SWITCH💡 de la placa: \"+global.get(\"placa_selec\")+\"\\n\\nEstado actual: \"+String(cambio_sw)+\" \";\nmsg.payload.chatId = String(-1001705665908) ;\nreturn msg;\n}}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4010,
        "y": 3380,
        "wires": [
            [
                "6e4ffec729e6fb45"
            ]
        ]
    },
    {
        "id": "6e4ffec729e6fb45",
        "type": "telegram sender",
        "z": "a66943788f88412d",
        "name": "",
        "bot": "f5bccb31401f3bc2",
        "haserroroutput": false,
        "outputs": 1,
        "x": 4250,
        "y": 3700,
        "wires": [
            []
        ]
    },
    {
        "id": "4c7ea64e05acfef5",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "LED",
        "rules": [
            {
                "t": "set",
                "p": "LED",
                "pt": "global",
                "to": "payload.led",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4740,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "5a77acc4e4c9a857",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "SWITCH",
        "rules": [
            {
                "t": "set",
                "p": "SWITCH",
                "pt": "global",
                "to": "payload.sw",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4770,
        "y": 3200,
        "wires": [
            []
        ]
    },
    {
        "id": "e08f54df2fa88d17",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Información:",
        "func": "\nmsg.payload.content = \"🔔 NOTIFICACIONES DE TEMPERATURAS 🔔\\n\\nPara recibir una notificación cuando la temperatura supere un máximo, utilice /tmax + temperatura.\\n\\nPara recibir una notificación cuando la temperatura esté por debajo de un mínimo, utilice /tmin + temperatura.\\n\\n\\n🔔 NOTIFICACIONES DE HUMEDAD 🔔\\n\\nPara recibir una notificación cuando la humedad supere un máximo, utilice /hmax + porcentaje.\\n\\nPara recibir una notificación cuando la humedad esté por debajo de un mínimo, utilice /hmin + porcentaje.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2970,
        "y": 3200,
        "wires": [
            [
                "62aa3139d815107f"
            ]
        ]
    },
    {
        "id": "82c175dfadb9b41b",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/alarma",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 2810,
        "y": 3200,
        "wires": [
            [
                "e08f54df2fa88d17"
            ],
            []
        ]
    },
    {
        "id": "c6b3f9185a1b4afc",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/tmin",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 2830,
        "y": 3320,
        "wires": [
            [
                "5735f558183f0fdc"
            ],
            []
        ]
    },
    {
        "id": "7aa5ab41bcfe5fa6",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/tmax",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 2830,
        "y": 3280,
        "wires": [
            [
                "4277838d64579a28"
            ],
            []
        ]
    },
    {
        "id": "4277838d64579a28",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Obtener valor tmax",
        "func": "var temp= parseInt(msg.payload.content);\nvar id = msg.payload.chatId;\nmsg.payload = {};\n \n    msg.payload.tmax = temp;\n\n\nmsg.payload.chatId = id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3010,
        "y": 3280,
        "wires": [
            [
                "9f5adb0f44ed7c21",
                "b42ad7e673bd1f60"
            ]
        ]
    },
    {
        "id": "5735f558183f0fdc",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Obtener valor tmin",
        "func": "var temp= parseFloat(msg.payload.content);\nvar id = msg.payload.chatId;\nmsg.payload = {};\n\n    msg.payload.tmin = temp;\n\nmsg.payload.chatId = id;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3010,
        "y": 3320,
        "wires": [
            [
                "0ee3e685fc70bccc",
                "b42ad7e673bd1f60"
            ]
        ]
    },
    {
        "id": "9f5adb0f44ed7c21",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "max_temp",
                "pt": "flow",
                "to": "payload.tmax",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 3280,
        "wires": [
            []
        ]
    },
    {
        "id": "0ee3e685fc70bccc",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "min_temp",
                "pt": "flow",
                "to": "payload.tmin",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "b42ad7e673bd1f60",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Información:",
        "func": "msg.payload.content = \"Alarma configurada correctamente.\";\nmsg.payload.type = \"message\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3430,
        "y": 3360,
        "wires": [
            [
                "2b385e0b913f250d"
            ]
        ]
    },
    {
        "id": "72e92c7ce0a8d44f",
        "type": "telegram sender",
        "z": "a66943788f88412d",
        "name": "",
        "bot": "f5bccb31401f3bc2",
        "haserroroutput": false,
        "outputs": 1,
        "x": 4370,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "97205ef9ef0942fd",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Comprobacion de Temperaturas límites",
        "info": "",
        "x": 2750,
        "y": 3520,
        "wires": []
    },
    {
        "id": "1360cb2cb0fdbc15",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta Temperaturas",
        "func": "if(msg.payload ==1)\n{\nvar placa = global.get(\"placa_selec\");\nmsg.payload=\n[\n   \n    { \"$project\": {\n        \"_id\": 0,\n        \"date\":1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"CHIPID\": \"$CHIPID\",\n        \"Humedad\":\"$DHT11.hum\",\n        }\n    },\n    { \"$sort\": {\"date\": -1} },\n    {\"$limit\" : 1}\n];\n\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3010,
        "y": 3560,
        "wires": [
            [
                "461f7db1ed13e460"
            ]
        ]
    },
    {
        "id": "461f7db1ed13e460",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 3280,
        "y": 3560,
        "wires": [
            [
                "e89cc2348ee85d1e"
            ]
        ]
    },
    {
        "id": "e89cc2348ee85d1e",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Comprobación",
        "func": "var Temp = msg.payload[0].Temperatura;\nvar PLACA = msg.payload[0].CHIPID;\nvar Hum = msg.payload[0].Humedad;\n\nvar ms_per_minute = 60000;\n// obtiene el timestamp actual\nvar ahora = new Date().getTime();\n// crear objeto fecha con la hora de hace 12 horas\nvar fecha = new Date(ahora - ms_per_minute);\n\nvar inicio = new Date(fecha.getFullYear(),fecha.getMonth(),fecha.getDate(),fecha.getHours());\n\nif (msg.payload[0].date >= inicio) //Para que no compruebe fechas pasadas\n{\nif (Temp > flow.get(\"max_temp\"))\n{\nmsg.payload = {};\nmsg.payload.chatId = -1001705665908;\nmsg.payload.type = \"message\";\nmsg.payload.content= \"⚠️ TEMPERATURA POR ENCIMA DEL LÍMITE ⚠️\\n\\nLa placa \"+PLACA+\" posee una temperatura de \"+Temp+\"ºC, superior al límite \"+String(flow.get(\"max_temp\"))+\"ºC.\";\n \n return msg;\n}\nelse if (Temp < flow.get(\"min_temp\"))\n{\n    msg.payload.chatId = -1001705665908;\n    msg.payload.type = \"message\";\nmsg.payload.content= \"⚠️ TEMPERATURA POR DEBAJO DEL LÍMITE ⚠️\\n\\nLa placa \"+PLACA+\" posee una temperatura de \"+Temp+\"ºC, inferior al límite \"+String(flow.get(\"min_temp\"))+\"ºC.\";\n\n    return msg;\n}\nelse if (Hum > flow.get(\"max_hum\"))\n{\n    msg.payload.chatId = -1001705665908;\n    msg.payload.type = \"message\";\nmsg.payload.content= \"⚠️ HUMEDAD POR ENCIMA DEL LÍMITE ⚠️\\n\\nLa placa \"+PLACA+\" posee una humedad del \"+Hum+\"%, superior al límite \"+String(flow.get(\"max_hum\"))+\"º%.\";\n\n    return msg;\n}\nelse if (Hum < flow.get(\"min_hum\"))\n{\n    msg.payload.chatId = -1001705665908;\n    msg.payload.type = \"message\";\nmsg.payload.content= \"⚠️ HUMEDAD POR DEBAJO DEL LÍMITE ⚠️\\n\\nLa placa \"+PLACA+\" posee una humedad del \"+Hum+\"º% inferior al límite \"+String(flow.get(\"min_hum\"))+\"%.\";\n\n    return msg;\n}\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3560,
        "y": 3560,
        "wires": [
            [
                "6e4ffec729e6fb45"
            ]
        ]
    },
    {
        "id": "cfce327914be92fd",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Establece la placa con la que se opera",
        "info": "",
        "x": 3600,
        "y": 2060,
        "wires": []
    },
    {
        "id": "a6e4ec9670ad108f",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Consulta de sensores",
        "info": "",
        "x": 3170,
        "y": 2140,
        "wires": []
    },
    {
        "id": "a9fdb7cc151e3d70",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Consulta/Modificación de actuadores",
        "info": "",
        "x": 3240,
        "y": 2720,
        "wires": []
    },
    {
        "id": "7958133a4c3fdea0",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Aviso al canal de modificación",
        "info": "",
        "x": 4030,
        "y": 3280,
        "wires": []
    },
    {
        "id": "49c7ab0ea217e2c5",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Programación de una alarma",
        "info": "",
        "x": 2660,
        "y": 3160,
        "wires": []
    },
    {
        "id": "79e7e861baf0d12b",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/hmax",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 2830,
        "y": 3380,
        "wires": [
            [
                "fa6aa9e840b75974"
            ],
            []
        ]
    },
    {
        "id": "827af9b8524ec36c",
        "type": "telegram command",
        "z": "a66943788f88412d",
        "name": "",
        "command": "/hmin",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "f5bccb31401f3bc2",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 2830,
        "y": 3420,
        "wires": [
            [
                "32c49ee3d8d77e8e"
            ],
            []
        ]
    },
    {
        "id": "fa6aa9e840b75974",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Obtener valor hmax",
        "func": "var hum= parseInt(msg.payload.content);\nvar id = msg.payload.chatId;\nif ((hum >= 0)&&(hum <= 100))\n{\nmsg.payload = {};\n \n    msg.payload.hmax = hum;\n\n\nmsg.payload.chatId = id;\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3010,
        "y": 3380,
        "wires": [
            [
                "f1af76c7dde5fe36",
                "b42ad7e673bd1f60"
            ]
        ]
    },
    {
        "id": "32c49ee3d8d77e8e",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Obtener valor hmin",
        "func": "var hum= parseFloat(msg.payload.content);\nvar id = msg.payload.chatId;\nif ((hum >= 0)&&(hum <= 100))\n{\nmsg.payload = {};\n\n    msg.payload.hmin = hum;\n\nmsg.payload.chatId = id;\nreturn msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3010,
        "y": 3420,
        "wires": [
            [
                "1089d0ddb4938449",
                "b42ad7e673bd1f60"
            ]
        ]
    },
    {
        "id": "f1af76c7dde5fe36",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "max_hum",
                "pt": "flow",
                "to": "payload.hmax",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "1089d0ddb4938449",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "min_hum",
                "pt": "flow",
                "to": "payload.hmin",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 3420,
        "wires": [
            []
        ]
    },
    {
        "id": "fdd849109fb16cda",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3840,
        "y": 2380,
        "wires": []
    },
    {
        "id": "4b3906ce386556c9",
        "type": "telegram sender",
        "z": "a66943788f88412d",
        "name": "",
        "bot": "f5bccb31401f3bc2",
        "haserroroutput": false,
        "outputs": 1,
        "x": 4010,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "edb8b4bb5550cc52",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP3098241/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "e8d1c74f5b497cee",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2460,
        "y": 3580,
        "wires": [
            [
                "d5082b036ae0db67"
            ]
        ]
    },
    {
        "id": "2c0c1679f5a7101c",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP9745759/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "e8d1c74f5b497cee",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2460,
        "y": 3640,
        "wires": [
            [
                "d5082b036ae0db67"
            ]
        ]
    },
    {
        "id": "6e7073fb52fa8d1f",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP1128666/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "e8d1c74f5b497cee",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2460,
        "y": 3700,
        "wires": [
            [
                "d5082b036ae0db67"
            ]
        ]
    },
    {
        "id": "44028950850b4495",
        "type": "mqtt in",
        "z": "a66943788f88412d",
        "name": "",
        "topic": "II1/ESP10796726/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "e8d1c74f5b497cee",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 2460,
        "y": 3760,
        "wires": [
            [
                "d5082b036ae0db67"
            ]
        ]
    },
    {
        "id": "d5082b036ae0db67",
        "type": "trigger",
        "z": "a66943788f88412d",
        "name": "",
        "op1": "0",
        "op2": "1",
        "op1type": "str",
        "op2type": "str",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 2720,
        "y": 3580,
        "wires": [
            [
                "1360cb2cb0fdbc15"
            ]
        ]
    },
    {
        "id": "2b385e0b913f250d",
        "type": "telegram sender",
        "z": "a66943788f88412d",
        "name": "",
        "bot": "f5bccb31401f3bc2",
        "haserroroutput": false,
        "outputs": 1,
        "x": 3600,
        "y": 3360,
        "wires": [
            []
        ]
    },
    {
        "id": "51cae8b2fccc66bb",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Registro de los datos",
        "info": "",
        "x": 160,
        "y": 3700,
        "wires": []
    },
    {
        "id": "6772c9f5cfef74c6",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Consulta",
        "func": "// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"inicio\") || ahora);\nvar hasta = new Date(global.get(\"fin\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nvar placa = String(global.get(\"placa\"));\n\nmsg.payload=\n[\n    { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio , \"$lte\": final } },{\"CHIPID\":placa} ]}},\n   \n   { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"Humedad\": \"$DHT11.hum\",\n        }\n    },\n{ \"$group\": {\n        \"_id\": { \n        \"$dateFromParts\" : {\n            \"year\": { \"$year\": \"$date\" }, \n            \"month\": { \"$month\": \"$date\" },\n            \"day\": { \"$dayOfMonth\": \"$date\" }\n        }},\n        \"Tmedia\":{\"$avg\":\"$Temperatura\"},\n        \"Tmax\":  {\"$max\":\"$Temperatura\"},\n        \"Tmin\":  {\"$min\":\"$Temperatura\"},\n        \"datos\": {\"$sum\":1},\n        \"Hmedia\":{\"$avg\":\"$Humedad\"},\n        \"Hmax\":  {\"$max\":\"$Humedad\"},\n        \"Hmin\":  {\"$min\":\"$Humedad\"}\n    }},\n    { \"$sort\": {\"date\": -1} },\n \n];\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 4040,
        "wires": [
            [
                "a297889a2da0473d"
            ]
        ]
    },
    {
        "id": "a297889a2da0473d",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 610,
        "y": 4040,
        "wires": [
            [
                "654237cf39dfdba6",
                "eaa40990c1ce9184",
                "7b480c8032d8b382",
                "dc2707f9168a3cd9",
                "c6e69c7fe25a1a70",
                "a6064a2b5f38b97a",
                "e3a08654115ab5ee",
                "cdcd7d9816cfcd17"
            ]
        ]
    },
    {
        "id": "eaa40990c1ce9184",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Tmax",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Máxima",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 4020,
        "wires": [
            [
                "7eb2599d385d3be1"
            ]
        ]
    },
    {
        "id": "7b480c8032d8b382",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Hmax",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Máxima",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 4140,
        "wires": [
            [
                "7a18f5a0f2d04572"
            ]
        ]
    },
    {
        "id": "654237cf39dfdba6",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Tmin",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Mínima",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 4060,
        "wires": [
            [
                "e3be9f6cc11da841"
            ]
        ]
    },
    {
        "id": "dc2707f9168a3cd9",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Hmin",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Mínima",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 4180,
        "wires": [
            [
                "fcf1431bf99c672f"
            ]
        ]
    },
    {
        "id": "5615c9241558db95",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "inicio",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 636.0056762695312,
        "y": 3898.6618876457214,
        "wires": [
            []
        ]
    },
    {
        "id": "a7d6af6d056cc4b4",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fin",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 639.2329559326172,
        "y": 3949.5454421043396,
        "wires": [
            []
        ]
    },
    {
        "id": "fd337ecd14079e7f",
        "type": "inject",
        "z": "a66943788f88412d",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 252.0084991455078,
        "y": 3924.420440196991,
        "wires": [
            [
                "24fc8d478e7cb13f",
                "4d56771becd8fe1b"
            ]
        ]
    },
    {
        "id": "dbc782357cfaad70",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Controles para seleccionar fechas",
        "info": "",
        "x": 260,
        "y": 3760,
        "wires": []
    },
    {
        "id": "9d1566fcf54a2cdf",
        "type": "ui_button",
        "z": "a66943788f88412d",
        "name": "",
        "group": "41f46ca6a1e0be8a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 4040,
        "wires": [
            [
                "6772c9f5cfef74c6",
                "bc22af38567d28ac",
                "91c976533486d3ea",
                "5e4e0cae9460ee26",
                "0f53269250676b59",
                "1b71205e5c2a1645",
                "62c8a1155ac1c266",
                "df894e46623db936",
                "367411df80966a6b"
            ]
        ]
    },
    {
        "id": "7eb2599d385d3be1",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "order": 18,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatura máxima",
        "format": "{{msg.payload}} ºC",
        "layout": "row-spread",
        "className": "",
        "x": 1180,
        "y": 4020,
        "wires": []
    },
    {
        "id": "e3be9f6cc11da841",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "order": 17,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperatura mínima",
        "format": "{{msg.payload}} ºC",
        "layout": "row-spread",
        "className": "",
        "x": 1180,
        "y": 4060,
        "wires": []
    },
    {
        "id": "7a18f5a0f2d04572",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "order": 20,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humedad máxima",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1180,
        "y": 4140,
        "wires": []
    },
    {
        "id": "fcf1431bf99c672f",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "order": 21,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humedad mínima",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1180,
        "y": 4180,
        "wires": []
    },
    {
        "id": "f99a8eb4903bbf44",
        "type": "ui_gauge",
        "z": "a66943788f88412d",
        "name": "",
        "group": "553560b97b7f7a5b",
        "order": 3,
        "width": 5,
        "height": 4,
        "gtype": "wave",
        "title": "Temperatura Media",
        "label": "ºC",
        "format": "{{value}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1170,
        "y": 3980,
        "wires": []
    },
    {
        "id": "c6e69c7fe25a1a70",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Tmedia",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Media",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 3980,
        "wires": [
            [
                "f99a8eb4903bbf44"
            ]
        ]
    },
    {
        "id": "5f62bda36da9fee5",
        "type": "ui_gauge",
        "z": "a66943788f88412d",
        "name": "",
        "group": "553560b97b7f7a5b",
        "order": 5,
        "width": 5,
        "height": 4,
        "gtype": "wave",
        "title": "Humedad Media",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1190,
        "y": 4100,
        "wires": []
    },
    {
        "id": "a6064a2b5f38b97a",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].Hmedia",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Media",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 4100,
        "wires": [
            [
                "5f62bda36da9fee5"
            ]
        ]
    },
    {
        "id": "bc22af38567d28ac",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Umbral de Temperatura",
        "func": "var umbral = flow.get(\"max_temp\");\n// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"inicio\") || ahora);\nvar hasta = new Date(global.get(\"fin\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nvar placa = String(global.get(\"placa\"));\n\nmsg.payload=\n[\n    { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio , \"$lte\": final } },{\"CHIPID\":placa},{\"DHT11.temp\": {\"$gte\":umbral}} ]}},\n   \n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"Humedad\": \"$DHT11.hum\",\n        \"Vcc\": \"$Vcc\",\n        }\n    },\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 4240,
        "wires": [
            [
                "0a850349722af5c1"
            ]
        ]
    },
    {
        "id": "3c42f43ab0948436",
        "type": "ui_template",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "name": "Registro de Temperaturas superiores al UMBRAL",
        "order": 24,
        "width": 16,
        "height": 4,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1250,
        "y": 4240,
        "wires": [
            []
        ]
    },
    {
        "id": "73778e620246044b",
        "type": "template",
        "z": "a66943788f88412d",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Registros de Temperaturas superiores al límite: </h1>\n <ul>\n{{#payload}}\n  <li>{{date}} : {{Temperatura}}ºC, </li>\n{{/payload}}\n </ul>\n \n",
        "output": "str",
        "x": 880,
        "y": 4240,
        "wires": [
            [
                "3c42f43ab0948436"
            ]
        ]
    },
    {
        "id": "990193ba8f78c70a",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Consulta de Temperaturas superiores a un Umbral",
        "info": "En esta parte del flujo cada vez que llegan datos y se actualizan en la base de datos, se consulta en la base de datos el último registro (sólo el último) y se muestra en el dashboard las principales variables del último registro (temperatura, humedad, fecha, etc.)\n\n",
        "x": 290,
        "y": 4200,
        "wires": []
    },
    {
        "id": "0a850349722af5c1",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 550,
        "y": 4240,
        "wires": [
            [
                "73778e620246044b"
            ]
        ]
    },
    {
        "id": "a4dbe4c16023a333",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "placa",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 3820,
        "wires": [
            []
        ]
    },
    {
        "id": "24fc8d478e7cb13f",
        "type": "ui_date_picker",
        "z": "a66943788f88412d",
        "name": "",
        "label": "Fecha final",
        "group": "41f46ca6a1e0be8a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 453.0113525390625,
        "y": 3948.994237422943,
        "wires": [
            [
                "a7d6af6d056cc4b4"
            ]
        ]
    },
    {
        "id": "271b2d840d444646",
        "type": "ui_dropdown",
        "z": "a66943788f88412d",
        "name": "idESP",
        "label": "ESP:",
        "tooltip": "",
        "place": "seleccione un ESP",
        "group": "41f46ca6a1e0be8a",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ESP3098241",
                "value": "ESP3098241",
                "type": "str"
            },
            {
                "label": "ESP9745759",
                "value": "ESP9745759",
                "type": "str"
            },
            {
                "label": "ESP1128666",
                "value": "ESP1128666",
                "type": "str"
            },
            {
                "label": "ESP10796726",
                "value": "ESP10796726",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "idESP",
        "x": 230,
        "y": 3820,
        "wires": [
            [
                "a4dbe4c16023a333"
            ]
        ]
    },
    {
        "id": "4d56771becd8fe1b",
        "type": "ui_date_picker",
        "z": "a66943788f88412d",
        "name": "",
        "label": "Fecha inicio",
        "group": "41f46ca6a1e0be8a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 450,
        "y": 3900,
        "wires": [
            [
                "5615c9241558db95"
            ]
        ]
    },
    {
        "id": "91c976533486d3ea",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Umbral de Temperatura",
        "func": "var umbral = flow.get(\"min_temp\");\n// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"inicio\") || ahora);\nvar hasta = new Date(global.get(\"fin\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nvar placa = String(global.get(\"placa\"));\n\nmsg.payload=\n[\n    { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio , \"$lte\": final } },{\"CHIPID\":placa},{\"DHT11.temp\": {\"$lte\":umbral}} ]}},\n   \n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"Humedad\": \"$DHT11.hum\",\n        \"Vcc\": \"$Vcc\",\n        }\n    },\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 4300,
        "wires": [
            [
                "6dc8f64dd3b1fdaa"
            ]
        ]
    },
    {
        "id": "6dc8f64dd3b1fdaa",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 530,
        "y": 4300,
        "wires": [
            [
                "b2307bf43a3096f7"
            ]
        ]
    },
    {
        "id": "b2307bf43a3096f7",
        "type": "template",
        "z": "a66943788f88412d",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Registros de temperaturas inferiores al límite: </h1>\n <ul>\n{{#payload}}\n  <li>{{date}} : {{Temperatura }}ºC, </li>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 860,
        "y": 4300,
        "wires": [
            [
                "3ffacef3825cc8d4"
            ]
        ]
    },
    {
        "id": "3ffacef3825cc8d4",
        "type": "ui_template",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "name": "Registro de Temperaturas superiores al UMBRAL",
        "order": 26,
        "width": 16,
        "height": 4,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1230,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "5e4e0cae9460ee26",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Umbral Humedad",
        "func": "var umbral = flow.get(\"max_hum\");\n// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"inicio\") || ahora);\nvar hasta = new Date(global.get(\"fin\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nvar placa = String(global.get(\"placa\"));\n\nmsg.payload=\n[\n    { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio , \"$lte\": final } },{\"CHIPID\":placa},{\"DHT11.hum\": {\"$gte\":umbral}} ]}},\n   \n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"Humedad\": \"$DHT11.hum\",\n        \"Vcc\": \"$Vcc\",\n        }\n    },\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 4360,
        "wires": [
            [
                "b28219a88f294fbd"
            ]
        ]
    },
    {
        "id": "b28219a88f294fbd",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 510,
        "y": 4360,
        "wires": [
            [
                "de16549ae9b3a8b0"
            ]
        ]
    },
    {
        "id": "de16549ae9b3a8b0",
        "type": "template",
        "z": "a66943788f88412d",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Registros de humedades superiores al límite: </h1>\n <ul>\n{{#payload}}\n  <li>{{date}} : {{Humedad }}%, </li>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 840,
        "y": 4360,
        "wires": [
            [
                "b90151c2c6af4d7f"
            ]
        ]
    },
    {
        "id": "b90151c2c6af4d7f",
        "type": "ui_template",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "name": "Registro de Temperaturas superiores al UMBRAL",
        "order": 28,
        "width": 16,
        "height": 4,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1210,
        "y": 4360,
        "wires": [
            []
        ]
    },
    {
        "id": "0f53269250676b59",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "Umbral de Humbral",
        "func": "var umbral = flow.get(\"min_hum\");\n// fecha por defecto es hoy\nvar ahora = new Date();\n// pillo los globales si los hay, si no la fecha de hoy\nvar desde = new Date(global.get(\"inicio\") || ahora);\nvar hasta = new Date(global.get(\"fin\") || ahora); \n// el día de inicio desde las cero horas\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\nvar placa = String(global.get(\"placa\"));\n\nmsg.payload=\n[\n    { \"$match\": {$and:[ {\"date\": { \"$gte\": inicio , \"$lte\": final } },{\"CHIPID\":placa},{\"DHT11.hum\": {\"$lte\":umbral}} ]}},\n   \n    { \"$project\": {\n        \"_id\": 0,\n        \"date\": 1,\n        \"Temperatura\": \"$DHT11.temp\",\n        \"Humedad\": \"$DHT11.hum\",\n        \"Vcc\": \"$Vcc\",\n        }\n    },\n    { \"$sort\": {\"date\": 1} }\n];\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 4420,
        "wires": [
            [
                "d4bf3a5ce1ddd48f"
            ]
        ]
    },
    {
        "id": "d4bf3a5ce1ddd48f",
        "type": "mongodb in",
        "z": "a66943788f88412d",
        "mongodb": "3752afa1.deaf9",
        "name": "",
        "collection": "Proyecto1_Datos",
        "operation": "aggregate",
        "x": 490,
        "y": 4420,
        "wires": [
            [
                "fa1200b1f2852d43"
            ]
        ]
    },
    {
        "id": "fa1200b1f2852d43",
        "type": "template",
        "z": "a66943788f88412d",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Registros de humedades inferiores al límite: </h1>\n <ul>\n{{#payload}}\n  <li>{{date}} : {{Humedad}}%, </li>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 820,
        "y": 4420,
        "wires": [
            [
                "208bf18c5f848bbf"
            ]
        ]
    },
    {
        "id": "208bf18c5f848bbf",
        "type": "ui_template",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "name": "Registro de Temperaturas superiores al UMBRAL",
        "order": 30,
        "width": 16,
        "height": 4,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1190,
        "y": 4420,
        "wires": [
            []
        ]
    },
    {
        "id": "e827fac04563c7c3",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "order": 23,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Limite máximo: ",
        "format": "{{msg.payload}} ºC",
        "layout": "row-spread",
        "className": "",
        "x": 460,
        "y": 4520,
        "wires": []
    },
    {
        "id": "be1567f57a8ea9b3",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "order": 29,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Limite mínimo: ",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 460,
        "y": 4640,
        "wires": []
    },
    {
        "id": "5bfdbb27079deb3f",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "order": 25,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Limite mínimo: ",
        "format": "{{msg.payload}} ºC",
        "layout": "row-spread",
        "className": "",
        "x": 460,
        "y": 4560,
        "wires": []
    },
    {
        "id": "5703b77da78ef12e",
        "type": "ui_text",
        "z": "a66943788f88412d",
        "group": "553560b97b7f7a5b",
        "order": 27,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Limite máximo: ",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "x": 460,
        "y": 4600,
        "wires": []
    },
    {
        "id": "1b71205e5c2a1645",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "var tmx = flow.get(\"max_temp\");\n\nmsg.payload = tmx;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 4520,
        "wires": [
            [
                "e827fac04563c7c3"
            ]
        ]
    },
    {
        "id": "62c8a1155ac1c266",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "\nvar tmn = flow.get(\"min_temp\");\n\n\nmsg.payload = tmn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 4560,
        "wires": [
            [
                "5bfdbb27079deb3f"
            ]
        ]
    },
    {
        "id": "df894e46623db936",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "var hmx = flow.get(\"max_hum\");\n\nmsg.payload = hmx;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 4600,
        "wires": [
            [
                "5703b77da78ef12e"
            ]
        ]
    },
    {
        "id": "367411df80966a6b",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "",
        "func": "var hmn = flow.get(\"min_hum\");\n\nmsg.payload = hmn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 4640,
        "wires": [
            [
                "be1567f57a8ea9b3"
            ]
        ]
    },
    {
        "id": "e3a08654115ab5ee",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "genera datos grÃ¡fica",
        "func": "var arrayavg=[];\nvar arraymax=[];\nvar arraymin=[];\n\n// los arrays usados en la represenstaciÃ³n grÃ¡fica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el mÃ©todo getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // aÃ±ade datos a los array\n        arrayavg.push({x : msg.payload[i]._id.getTime() , y : msg.payload[i].Tmedia});\n        arraymax.push({x : msg.payload[i]._id.getTime() , y : msg.payload[i].Tmax});\n        arraymin.push({x : msg.payload[i]._id.getTime() , y : msg.payload[i].Tmin});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"T.media\",\"T.max\",\"T.min\"],\n        \"data\":[arrayavg, arraymax, arraymin],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  ",
        "outputs": "1",
        "noerr": 0,
        "x": 920,
        "y": 3840,
        "wires": [
            [
                "b10cbf93b3dfc844"
            ]
        ]
    },
    {
        "id": "b10cbf93b3dfc844",
        "type": "ui_chart",
        "z": "a66943788f88412d",
        "name": "",
        "group": "6db18075fc764464",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Temperaturas diarias",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#008000",
            "#ff0000",
            "#0080ff",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1140,
        "y": 3840,
        "wires": [
            []
        ]
    },
    {
        "id": "cbd8be63875efc49",
        "type": "ui_chart",
        "z": "a66943788f88412d",
        "name": "",
        "group": "6db18075fc764464",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Humedad diaria",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#008000",
            "#ff0000",
            "#0080ff",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 3900,
        "wires": [
            []
        ]
    },
    {
        "id": "cdcd7d9816cfcd17",
        "type": "function",
        "z": "a66943788f88412d",
        "name": "genera datos grÃ¡fica",
        "func": "var arrayavg=[];\nvar arraymax=[];\nvar arraymin=[];\n\n// los arrays usados en la represenstaciÃ³n grÃ¡fica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el mÃ©todo getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // aÃ±ade datos a los array\n        arrayavg.push({x : msg.payload[i]._id.getTime() , y : msg.payload[i].Hmedia});\n        arraymax.push({x : msg.payload[i]._id.getTime() , y : msg.payload[i].Hmax});\n        arraymin.push({x : msg.payload[i]._id.getTime() , y : msg.payload[i].Hmin});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"H.media\",\"H.max\",\"H.min\"],\n        \"data\":[arrayavg, arraymax, arraymin],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  ",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 3900,
        "wires": [
            [
                "cbd8be63875efc49"
            ]
        ]
    },
    {
        "id": "32ced550f65da424",
        "type": "http response",
        "z": "a66943788f88412d",
        "name": "OTA Response",
        "statusCode": "",
        "headers": {},
        "x": 3920,
        "y": 4520,
        "wires": []
    },
    {
        "id": "490f308cbb5cace5",
        "type": "http in",
        "z": "a66943788f88412d",
        "name": "OTA Manager",
        "url": "/esp8266-ota",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 2028.0555801391602,
        "y": 4488.285671234131,
        "wires": [
            [
                "10ae80401bb6c92d"
            ]
        ]
    },
    {
        "id": "8ac5748099a36e74",
        "type": "file",
        "z": "a66943788f88412d",
        "name": "Save md5 Checksum",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 3320,
        "y": 4660,
        "wires": [
            []
        ]
    },
    {
        "id": "db80a6a062ba1e2d",
        "type": "file in",
        "z": "a66943788f88412d",
        "name": "Read firmware",
        "filename": "",
        "format": "",
        "x": 2622.0835571289062,
        "y": 4660.833312988281,
        "wires": [
            [
                "e90dce08af1d5380"
            ]
        ]
    },
    {
        "id": "51b38efba7887e6b",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Extract filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.files.firmware[0].originalname",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "req",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "res",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2399.3751831054688,
        "y": 4662.083312988281,
        "wires": [
            [
                "db80a6a062ba1e2d"
            ]
        ]
    },
    {
        "id": "960c8f439a8ffa7a",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3005.6251831054688,
        "y": 4660.4166259765625,
        "wires": [
            [
                "8ac5748099a36e74"
            ]
        ]
    },
    {
        "id": "61bdf4c3c4cb0a2a",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Firmware Upgrade",
        "info": "The system determines which firmware to send based\non the MAC address, version, and MD5 headers in the\nrequest from the ESP8266.\n\nFirstly, it checks if a firmware hash file with \nthe MAC address as the name exists, or else if a \nfirmware file with the version as the name exists.\nIf neither exist then no update is available.\n\nIt then reads the corresponding MD5 hash from the\nhash file and compares to the MD5 hash in the\nrequest.  If they match then the firmware is up\nto date and no update is required.\n\nOtherwise, it sends the contents of the firmware\nbin file and the MD5 hash value.",
        "x": 2043.5,
        "y": 3886,
        "wires": []
    },
    {
        "id": "8f4e7881d3d3a8fe",
        "type": "comment",
        "z": "a66943788f88412d",
        "name": "Firmware Management",
        "info": "",
        "x": 2050.5,
        "y": 4382,
        "wires": []
    },
    {
        "id": "a8fbd4e9ddbd8e7c",
        "type": "template",
        "z": "a66943788f88412d",
        "name": "Firmware Manager",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <title>ESP8266 OTA Firmware Manager</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n        <script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n        <style>\n            .file-btn-grp {\n                display: none;\n            }\n            body {\n                background-color: #f6f6f6;\n            }\n            .text_holder {\n                display: block;\n                max-width: 100%;\n                word-wrap: break-word;\n                line-height: 30px;\n            }\n            #main {\n                margin-top: 50px;\n                background-color: #ffffff;\n                border-radius: 5px;\n                width: 70%;\n                min-width: 500px;\n                border: 1px solid #545454;\n            }\n            .alert {\n                margin-top: 10px;\n                margin-bottom: 5px;\n            }\n            .link {\n                font-style: italic;\n            }\n            .listentry {\n                display: none;\n                list-style-type: none;\n            }\n        </style>\n\n    </head>\n    <body>\n        <div class=\"container\" id=\"main\">\n            <h1><small>ESP8266 OTA Firmware Manager</small></h1>\n            <h2><small>Upload New Firmware</small></h2>\n\n            <form role =\"form\" id=\"main_input_box\" action=\"esp8266-ota\" method=\"POST\" enctype=\"multipart/form-data\" class=\"form-inline\">\n                <input type=\"file\" accept=\".bin\" class=\"hidden\" id=\"fileUpload\" name=\"firmware\" placeholder=\"firmware.bin\">\n                <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <span class=\"input-group-btn\">\n                        <button id=\"browse\" type=\"button\" class=\"btn btn-primary\">Browse...</button>\n                    </span>\n                    <input id=\"filename\" size=100 readonly=\"\" class=\"form-control\" placeholder=\"Firmware.bin\">\n                    <span class=\"input-group-btn\">\n                        <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary add_button\">\n                    </span>\n                </div>\n                </div>\n            </form>\n\n            <h2><small>Current Firmware</small></h2>\n            <ul class=\"list-group\" id=\"list_of_items\">\n            </ul>\n        </div>\n\n        <div id=\"linkModal\" class=\"modal fade\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n        \n                <!-- Modal content-->\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                        <h4 class=\"modal-title\">Create Symbolic Link</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form class=\"form-horizontal\" id=\"linkForm\" role=\"form\" action=\"#\" method=\"POST\">\n                            <div class=\"form-group\">\n                                <label class=\"control-label  col-sm-2\" for=\"linkName\">Link:</label> \n                                <div class=\"col-sm-10\">\n                                    <input id=\"linkName\" name=\"linkName\" class=\"form-control\"/>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"control-label  col-sm-2\" for=\"linkFile\">To:</label> \n                                <div class=\"col-sm-10\">\n                                    <input class=\"form-control\" id=\"linkFile\" name=\"linkFile\"/>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"submit\" class=\"btn btn-success link-create\">Create</button>\n                        <button type=\"button\" class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <script>\n\n            var deleteButton = \"<button id='delete' class='btn btn-warning'>Delete</button>\";\n            var linkButton = \"<button id='link' class='btn btn-success'>Link</button>\";\n            var oneButton = \"<div class='file-btn-grp btn-group pull-right'>\" + deleteButton + \"</div>\";\n            var twoButtons = \"<div class='file-btn-grp btn-group pull-right'>\" + deleteButton + linkButton + \"</div>\";\n            \n            function addListEntry(list, filename, linkname) {\n            \n                var entry;\n                \n                if (linkname === undefined) {\n                    entry = $(\"<li class='listentry list-group-item'><div class='text_holder'><span>\" \n                    + filename + \"</span>\" + twoButtons + \"</div></li>\");\n                } else {\n                    entry = $(\"<li class='listentry list-group-item'><div class='text_holder'><span class='link'>\" \n                    + filename + \"</span> <span class='glyphicon glyphicon-arrow-right'></span> \" \n                    + linkname + oneButton + \"</div></li>\");\n                }\n                \n                entry.mouseover(function(){\n                    $(this).find(\".btn-group\").fadeIn(\"fast\");\n                });\n                entry.mouseleave(function(){\n                    $(this).find(\".btn-group\").fadeOut(\"slow\");\n                });\n                \n                entry.on(\"click\", \"button#delete\", function(){\n                    var listItem = this.parentElement.parentElement.parentElement;\n                    var file = this.parentElement.parentElement.childNodes[0].childNodes[0].data;\n                    $.ajax({\n                        type: 'DELETE',\n                        data: {\"filename\": file},\n                        success: function(result) {\n                            $(listItem).fadeOut(\"slow\", function(){\n                                listItem.remove();\n                            });\n                        },\n                        error: function(result) {\n                            $(listItem).append(\"<div class='alert alert-danger'>\"\n                                + \"<a href='#' class='close' data-dismiss='alert'\"\n                                + \"aria-label='close'>&times;</a>\"\n                                + result.responseText + \"</div>\");\n                        }\n                    });\n                });\n           \n                entry.on(\"click\", \"button#link\", function(){\n                    var file = this.parentElement.parentElement.childNodes[0].childNodes[0].data;\n                    $(\"#linkName\").val(\"\");\n                    $(\"#linkFile\").prop(\"disabled\", true).val(file);\n                    $(\"#linkName\").parent().removeClass(\"has-error\");\n                    $(\"#linkModal\").modal();\n                    $('#linkModal').on('shown.bs.modal', function () {\n                        $('#linkName').focus();\n                    });\n                });\n                \n                if (list.children().length == 0) {\n                    list.append(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n\n                if (filename < $(\"li:first span:first\", list).text()) {\n                    $(\"li:first\", list).before(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n                if (filename > $(\"li:last span:first\", list).text()) {\n                    $(\"li:last\", list).after(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n                \n                var count = 0;\n                var $li = $(\"li\", list);\n                do {\n                    var index = parseInt($li.length / 2);\n                    var $compare = $li.eq(index);\n                    var compare = $(\"span:first\",$compare).text();\n                    if (filename === compare) {\n                        break;\n                    }\n                    else if (filename > compare) {\n                        $li = $li.slice(index, $li.length);\n                    } else {\n                        $li = $li.slice(0, index);\n                    }\n                } while ($li.length > 1);\n\n                if (filename === compare) {\n                    $compare.slideUp(\"fast\").slideDown(\"slow\");\n                    return;\n                } else if (filename < compare) { \n                    entry.insertBefore($compare); \n                } else { \n                    entry.insertAfter($compare); \n                }\n                entry.slideDown(\"slow\");\n            }\n            \n            \n            var files = String(\"{{payload.files}}\").split(',');\n            var links = String(\"{{payload.links}}\").split(',');\n            \n            var list_of_items = $(\"#list_of_items\");\n            \n            files.forEach(function(file,index) {\n                if (links[index] == \"\") {\n                    addListEntry(this, file.slice(0,-4));\n                } else {\n                    addListEntry(this, file.slice(0,-4), links[index].slice(0,-4));\n                }\n            },list_of_items);\n           \n           \n            $(\"#linkModal\").on(\"click\", \"button.link-create\", function(event){\n               event.preventDefault();\n               if ($(\"#linkName\").val() == \"\") {\n                    $('#linkName').focus();\n                    $('#linkName').parent().addClass(\"has-error\");\n                    return false;\n               }\n               $(\"#linkFile\").prop(\"disabled\",false);               \n               $.ajax({\n                    type: 'PUT',\n                    data: $(\"#linkForm\").serialize(),\n                    success: function(result) {\n                        $(\"#linkModal\").modal('hide');\n                        addListEntry(list_of_items, $('#linkName').val(), $('#linkFile').val());\n                    },\n                    error: function(result) {\n                        $(\"#linkFile\").prop(\"disabled\", true);\n                        $('#linkName').focus();\n                        $('#linkName').parent().addClass(\"has-error\");\n                        $(linkForm).append(\"<div id='linkError' class='alert alert-danger'>\"\n                             + \"<a href='#' class='close' data-dismiss='alert'\"\n                             + \"aria-label='close'>&times;</a>\"\n                             + result.responseText + \"</div>\");\n                    }\n                });\n            });\n            \n            $(\"#browse\").on('click', function () {\n                fileUpload.click();\n            });\n            \n            $(\"#fileUpload\").on('change', function () {\n                $(\"#filename\").val($(\"#fileUpload\").val().split('/').pop().split('\\\\').pop());\n            });\n            \n            var frm = $(\"#main_input_box\");\n            \n            frm.submit( function( e ) {\n                e.preventDefault();\n                if ($('#fileUpload').val() == \"\") return null;\n                $.ajax( {\n                    url: frm.attr('action'),\n                    type: frm.attr('method'),\n                    data: new FormData( this ),\n                    processData: false,\n                    contentType: false,\n                    success: function(result) {\n                        addListEntry(list_of_items, $('#fileUpload').val().slice(0,-4).split('\\\\').pop());\n                        $('#fileUpload').val('');\n                        $(':text').val('');\n                    },\n                    error: function(result) {\n                        $(\"#main_input_box\").append(\"<div class='alert alert-danger'>\"\n                             + \"<a href='#' class='close' data-dismiss='alert'\"\n                             + \"aria-label='close'>&times;</a>\"\n                             + result.responseText + \"</div>\");\n                    }\n\n                });\n            });\n        </script>\n    </body>\n</html>",
        "output": "str",
        "x": 3221.3333740234375,
        "y": 4485.813537597656,
        "wires": [
            [
                "32ced550f65da424"
            ]
        ]
    },
    {
        "id": "aeb7c302ed4ac794",
        "type": "http in",
        "z": "a66943788f88412d",
        "name": "OTA Delete",
        "url": "/esp8266-ota",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 2023.125,
        "y": 4773.75,
        "wires": [
            [
                "16b6ba895998ae78"
            ]
        ]
    },
    {
        "id": "34ebee0b6b6f667f",
        "type": "catch",
        "z": "a66943788f88412d",
        "name": "File Error",
        "scope": [
            "d3059d17813724eb",
            "47a7a006a2eade16",
            "c5270fbb546505d6",
            "d53ed4d196cd966d",
            "2f8da4e368e79334"
        ],
        "x": 3340,
        "y": 4600,
        "wires": [
            [
                "b821dae33a324154"
            ]
        ]
    },
    {
        "id": "b821dae33a324154",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Error",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3628.3334426879883,
        "y": 4585.666684150696,
        "wires": [
            [
                "32ced550f65da424"
            ]
        ]
    },
    {
        "id": "d6e412460386cd6b",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Change to MD5 filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.filename",
                "pt": "msg",
                "from": "bin",
                "fromt": "str",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3210,
        "y": 4780,
        "wires": [
            [
                "47a7a006a2eade16"
            ]
        ]
    },
    {
        "id": "54bb15888c74455d",
        "type": "http in",
        "z": "a66943788f88412d",
        "name": "OTA Link",
        "url": "/esp8266-ota",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 2024,
        "y": 4881.5,
        "wires": [
            [
                "7b4c4695543f37cb"
            ]
        ]
    },
    {
        "id": "7b4c4695543f37cb",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Extract filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.linkName",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.linkFile",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2715.8333435058594,
        "y": 4887.333373069763,
        "wires": [
            [
                "c5270fbb546505d6"
            ]
        ]
    },
    {
        "id": "92c666161f60fd91",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Change to MD5 Filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.linkName",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.linkFile",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3238.8333435058594,
        "y": 4888.333373069763,
        "wires": [
            [
                "d53ed4d196cd966d"
            ]
        ]
    },
    {
        "id": "16b6ba895998ae78",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Extract filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2713.3333435058594,
        "y": 4780.833373069763,
        "wires": [
            [
                "d3059d17813724eb"
            ]
        ]
    },
    {
        "id": "0fbe0416e8dbdbd0",
        "type": "http response",
        "z": "a66943788f88412d",
        "name": "OTA Response",
        "x": 4160,
        "y": 3940,
        "wires": []
    },
    {
        "id": "00c923cb2f12147e",
        "type": "file in",
        "z": "a66943788f88412d",
        "name": "Load Firmware",
        "filename": "",
        "format": "",
        "sendError": false,
        "x": 3886.999786376953,
        "y": 4239.884000778198,
        "wires": [
            [
                "0fbe0416e8dbdbd0",
                "24e94a08559bbae4"
            ]
        ]
    },
    {
        "id": "81de783f97879461",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "No Update",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "304",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4186.047607421875,
        "y": 4092.464262008667,
        "wires": [
            [
                "0fbe0416e8dbdbd0"
            ]
        ]
    },
    {
        "id": "6e89e760f65c43ec",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Forbidden",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "403",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Forbidden",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2800,
        "y": 3920,
        "wires": [
            [
                "0fbe0416e8dbdbd0"
            ]
        ]
    },
    {
        "id": "24e94a08559bbae4",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "Update sent",
        "active": false,
        "console": "false",
        "complete": "req.headers.x-esp8266-sta-mac",
        "x": 4161.940246582031,
        "y": 4239.892911911011,
        "wires": []
    },
    {
        "id": "1e7e9aa154e77a97",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Save MD5 Hash",
        "rules": [
            {
                "t": "set",
                "p": "headers.x-MD5",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "md5",
                "fromt": "str",
                "to": "bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3675.785789489746,
        "y": 4227.026866912842,
        "wires": [
            [
                "00c923cb2f12147e"
            ]
        ]
    },
    {
        "id": "505c8b7a4247b8a9",
        "type": "switch",
        "z": "a66943788f88412d",
        "name": "Update type",
        "property": "req.headers.x-esp8266-mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "spiffs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sketch",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 2350,
        "y": 4040,
        "wires": [
            [
                "81de783f97879461"
            ],
            [
                "a3c85817959a5751"
            ]
        ]
    },
    {
        "id": "d505b488bbbe68e9",
        "type": "switch",
        "z": "a66943788f88412d",
        "name": "Compare MD5 hash",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "req.headers.x-esp8266-sketch-md5",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 3425.41064453125,
        "y": 4162.134031295776,
        "wires": [
            [
                "81de783f97879461",
                "2d2a3df2f8c6fe82"
            ],
            [
                "1e7e9aa154e77a97",
                "b42d45936c019f8a"
            ]
        ]
    },
    {
        "id": "4fea4199ca5fb3dc",
        "type": "catch",
        "z": "a66943788f88412d",
        "name": "File error",
        "scope": [
            "00c923cb2f12147e",
            "9f57b8a396cdee37"
        ],
        "x": 3920,
        "y": 4160,
        "wires": [
            [
                "81de783f97879461",
                "d25d330dc5beb925"
            ]
        ]
    },
    {
        "id": "1efa952742157cef",
        "type": "switch",
        "z": "a66943788f88412d",
        "name": "Check user agent",
        "property": "req.headers.user-agent",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "ESP8266-http-Update",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 2290,
        "y": 3940,
        "wires": [
            [
                "6e89e760f65c43ec"
            ],
            [
                "505c8b7a4247b8a9"
            ]
        ]
    },
    {
        "id": "a3c85817959a5751",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Get MAC hash filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.headers.x-esp8266-sta-mac",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2400,
        "y": 4140,
        "wires": [
            [
                "74fee928ee41f293"
            ]
        ]
    },
    {
        "id": "9f57b8a396cdee37",
        "type": "file in",
        "z": "a66943788f88412d",
        "name": "Load Hash",
        "filename": "",
        "format": "utf8",
        "sendError": false,
        "x": 3214.410629272461,
        "y": 4161.7768840789795,
        "wires": [
            [
                "d505b488bbbe68e9"
            ]
        ]
    },
    {
        "id": "f47f938f3e07d347",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Get Version hash filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.headers.x-esp8266-version",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2690,
        "y": 4280,
        "wires": [
            [
                "7d284ad4efe816d2",
                "ba05eed0135acf9d"
            ]
        ]
    },
    {
        "id": "d25d330dc5beb925",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "Firmware file error",
        "active": true,
        "console": "false",
        "complete": "error",
        "x": 4121.154479980469,
        "y": 4181.035703659058,
        "wires": []
    },
    {
        "id": "077ff16dab8a5044",
        "type": "http in",
        "z": "a66943788f88412d",
        "name": "OTA Request",
        "url": "/esp8266-ota/update",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 2030,
        "y": 3940,
        "wires": [
            [
                "1efa952742157cef",
                "b3eefc2bfb3b87b8"
            ]
        ]
    },
    {
        "id": "b33ec82661d56a20",
        "type": "switch",
        "z": "a66943788f88412d",
        "name": "",
        "property": "req.headers.x-esp8266-version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 2253.678466796875,
        "y": 4287.142883300781,
        "wires": [
            [
                "f47f938f3e07d347"
            ],
            [
                "b1dd25fcdeeb0848"
            ]
        ]
    },
    {
        "id": "b1dd25fcdeeb0848",
        "type": "change",
        "z": "a66943788f88412d",
        "name": "Version in Request",
        "rules": [
            {
                "t": "set",
                "p": "req.headers.x-esp8266-version",
                "pt": "msg",
                "to": "req.params.version",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2463.1427612304688,
        "y": 4353.214324951172,
        "wires": [
            [
                "f47f938f3e07d347"
            ]
        ]
    },
    {
        "id": "b3eefc2bfb3b87b8",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "Update req",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 2186.214401245117,
        "y": 4075.6696758270264,
        "wires": []
    },
    {
        "id": "e672dc64a55f0fed",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 2910,
        "y": 4180,
        "wires": []
    },
    {
        "id": "145600ad84bce4e0",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 2933.249942779541,
        "y": 4091.8593463897705,
        "wires": []
    },
    {
        "id": "ba05eed0135acf9d",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "filename",
        "x": 2933.0234375,
        "y": 4375.0390625,
        "wires": []
    },
    {
        "id": "f77ef42ea664cd58",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 3250.0234375,
        "y": 4344.0390625,
        "wires": []
    },
    {
        "id": "f3d1ee3ae5f4fc17",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 3269.0234375,
        "y": 4227.0390625,
        "wires": []
    },
    {
        "id": "2d2a3df2f8c6fe82",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 3628.0234375,
        "y": 4099.0390625,
        "wires": []
    },
    {
        "id": "b42d45936c019f8a",
        "type": "debug",
        "z": "a66943788f88412d",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 3650.0234375,
        "y": 4326.0390625,
        "wires": []
    },
    {
        "id": "2f8da4e368e79334",
        "type": "fs-ops-move",
        "z": "a66943788f88412d",
        "name": "Store firmware",
        "sourcePath": "req.files.firmware[0].destination",
        "sourcePathType": "msg",
        "sourceFilename": "req.files.firmware[0].filename",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "req.files.firmware[0].originalname",
        "destFilenameType": "msg",
        "link": false,
        "x": 2205.892848968506,
        "y": 4658.333255767822,
        "wires": [
            [
                "51b38efba7887e6b",
                "32ced550f65da424"
            ]
        ]
    },
    {
        "id": "c5270fbb546505d6",
        "type": "fs-ops-move",
        "z": "a66943788f88412d",
        "name": "Link firmware",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.linkFile",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "payload.linkName",
        "destFilenameType": "msg",
        "link": true,
        "x": 2975.3333435058594,
        "y": 4887.333373069763,
        "wires": [
            [
                "92c666161f60fd91"
            ]
        ]
    },
    {
        "id": "d53ed4d196cd966d",
        "type": "fs-ops-move",
        "z": "a66943788f88412d",
        "name": "Link MD5",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.linkFile",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "payload.linkName",
        "destFilenameType": "msg",
        "link": true,
        "x": 3483.3333435058594,
        "y": 4887.333373069763,
        "wires": [
            [
                "32ced550f65da424"
            ]
        ]
    },
    {
        "id": "d3059d17813724eb",
        "type": "fs-ops-delete",
        "z": "a66943788f88412d",
        "name": "Delete firmware",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.filename",
        "filenameType": "msg",
        "x": 2959.4583892822266,
        "y": 4779.916650772095,
        "wires": [
            [
                "d6e412460386cd6b"
            ]
        ]
    },
    {
        "id": "47a7a006a2eade16",
        "type": "fs-ops-delete",
        "z": "a66943788f88412d",
        "name": "Delete MD5 Hash",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.filename",
        "filenameType": "msg",
        "x": 3501.666549682617,
        "y": 4779.999960899353,
        "wires": [
            [
                "32ced550f65da424"
            ]
        ]
    },
    {
        "id": "7d284ad4efe816d2",
        "type": "fs-ops-access",
        "z": "a66943788f88412d",
        "name": "Check for MD5 file exists",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 3037.2857055664062,
        "y": 4279.66961479187,
        "wires": [
            [
                "9f57b8a396cdee37",
                "f3d1ee3ae5f4fc17"
            ],
            [
                "81de783f97879461",
                "f77ef42ea664cd58"
            ]
        ]
    },
    {
        "id": "74fee928ee41f293",
        "type": "fs-ops-access",
        "z": "a66943788f88412d",
        "name": "Check for MD5 file exists",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 2630,
        "y": 4120,
        "wires": [
            [
                "9f57b8a396cdee37",
                "145600ad84bce4e0"
            ],
            [
                "b33ec82661d56a20",
                "e672dc64a55f0fed"
            ]
        ]
    },
    {
        "id": "f5212df1f3a332b3",
        "type": "fs-ops-link",
        "z": "a66943788f88412d",
        "name": "Get Links",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.files",
        "filenameType": "msg",
        "link": "payload.links",
        "linkType": "msg",
        "x": 2616.4999923706055,
        "y": 4488.333311080933,
        "wires": [
            [
                "a8fbd4e9ddbd8e7c"
            ]
        ]
    },
    {
        "id": "10ae80401bb6c92d",
        "type": "fs-ops-dir",
        "z": "a66943788f88412d",
        "name": "Firmware listing",
        "path": "firmware.directory",
        "pathType": "flow",
        "filter": "*.bin",
        "filterType": "str",
        "dir": "payload.files",
        "dirType": "msg",
        "x": 2333.035598754883,
        "y": 4487.801592826843,
        "wires": [
            [
                "f5212df1f3a332b3"
            ]
        ]
    },
    {
        "id": "e90dce08af1d5380",
        "type": "md5",
        "z": "a66943788f88412d",
        "name": "",
        "fieldToHash": "payload",
        "hashField": "payload",
        "hashFieldType": "msg",
        "x": 2811.6669921875,
        "y": 4660.833251953125,
        "wires": [
            [
                "960c8f439a8ffa7a"
            ]
        ]
    },
    {
        "id": "d8fb6605cd67c42d",
        "type": "config",
        "z": "a66943788f88412d",
        "name": "Firmware Config",
        "properties": [
            {
                "p": "firmware.directory",
                "pt": "flow",
                "to": "/home/ubuntu/OTA/",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 2063.0714111328125,
        "y": 4200.142852783203,
        "wires": []
    },
    {
        "id": "ee42b0c8e07e128e",
        "type": "httpInMultipart",
        "z": "a66943788f88412d",
        "name": "OTA Upload",
        "url": "/esp8266-ota",
        "method": "post",
        "fields": "[{ \"name\": \"firmware\"}]",
        "swaggerDoc": "",
        "x": 2019.785743713379,
        "y": 4652.428610801697,
        "wires": [
            [
                "2f8da4e368e79334"
            ]
        ]
    },
    {
        "id": "39c68df18160131d",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "71160729f6f6b7b9",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "cde3e6d6c5687e55",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "ef2138983ae9e060",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "12e83b3e1aacf7b5",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "94c4515b8d6f3f2b",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 13,
        "width": 7,
        "height": 1
    },
    {
        "id": "a7c6507dbb7f9379",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "c7ab943af517c23b",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "bb6baf36c29aaacb",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "36eca5be5607ec65",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 19,
        "width": 7,
        "height": 1
    },
    {
        "id": "32330b110469921d",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "ced988fa2a54a9da",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "7e3fe45951281d8c",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "621c0c82dbca5be1",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "955800c41d0ae13a",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 1,
        "width": 16,
        "height": 1
    },
    {
        "id": "73276c593c4a7977",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "19355d77244e7b4d",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "15e5065af8cc72fa",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "d27bb3bbf3a28f45",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "cdfa836e88e05a5f",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "6665219fb3f3e1f7",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "beda5b305af5754c",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "6925ca56fc3a9932",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 11,
        "width": 4,
        "height": 1
    },
    {
        "id": "e6e0de759f856a84",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "fbd1fb1c91a4418b",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "bf78c621e7450a5c",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 14,
        "width": 4,
        "height": 1
    },
    {
        "id": "9932cda9c83e1b99",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "10f3d08936beaf68",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 16,
        "width": 16,
        "height": 1
    },
    {
        "id": "f3450fd46c6cb227",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 19,
        "width": 16,
        "height": 1
    },
    {
        "id": "b65de1de66844406",
        "type": "ui_spacer",
        "z": "a66943788f88412d",
        "name": "spacer",
        "group": "553560b97b7f7a5b",
        "order": 22,
        "width": 16,
        "height": 1
    },
    {
        "id": "ab327fe76cd1459c",
        "type": "ui_group",
        "name": "NIVEL LED",
        "tab": "6f3e6a7804df93fa",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "819581010d48bfd0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "8c10952216336c2b",
        "type": "ui_group",
        "name": "CONFIG",
        "tab": "130b2bcfdd95d397",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cc1d7259111dc549",
        "type": "ui_group",
        "name": "ESP_3098241",
        "tab": "0252c3f076347a5b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8bc36ba409dbee33",
        "type": "ui_group",
        "name": "ESP_9745759",
        "tab": "0252c3f076347a5b",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "84b881e0c7be9760",
        "type": "ui_group",
        "name": "ESP_10796726",
        "tab": "0252c3f076347a5b",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "929645bed50e4a53",
        "type": "ui_group",
        "name": "ESP_1128666",
        "tab": "0252c3f076347a5b",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6cc380b90f958cb0",
        "type": "ui_group",
        "name": "NOTIFICACIONES",
        "tab": "130b2bcfdd95d397",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fe6409ad6ad243f8",
        "type": "ui_group",
        "name": "SWITCH",
        "tab": "6f3e6a7804df93fa",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3752afa1.deaf9",
        "type": "mongodb",
        "hostname": "iot.ac.uma.es",
        "connectOptions": "",
        "port": "27017",
        "db": "pruebas",
        "name": ""
    },
    {
        "id": "2d0f5eee09169370",
        "type": "mqtt-broker",
        "name": "Proyecto",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a34ffe7a.04009",
        "type": "ui_group",
        "name": "Grupo descarga",
        "tab": "477e4d25a78c5b15",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f5bccb31401f3bc2",
        "type": "telegram bot",
        "botname": "IIgrupo1_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "9316867d5b335f11",
        "type": "mqtt-broker",
        "name": "iot.ac.uma.es",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "e8d1c74f5b497cee",
        "type": "mqtt-broker",
        "name": "Proyecto",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "41f46ca6a1e0be8a",
        "type": "ui_group",
        "name": "Parámetros",
        "tab": "a8cc056b646f55de",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "553560b97b7f7a5b",
        "type": "ui_group",
        "name": "Resultados",
        "tab": "a8cc056b646f55de",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6db18075fc764464",
        "type": "ui_group",
        "name": "Gráficas",
        "tab": "a8cc056b646f55de",
        "order": 3,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "621c0c82dbca5be1",
        "type": "ui_group",
        "name": "ESP_9745759",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6f3e6a7804df93fa",
        "type": "ui_tab",
        "name": "ACTUADORES",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "130b2bcfdd95d397",
        "type": "ui_tab",
        "name": "CONFIG",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0252c3f076347a5b",
        "type": "ui_tab",
        "name": "ACTUALIZACION",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "477e4d25a78c5b15",
        "type": "ui_tab",
        "name": "Descarga de Datos",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a8cc056b646f55de",
        "type": "ui_tab",
        "name": "Registro de Valores",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]